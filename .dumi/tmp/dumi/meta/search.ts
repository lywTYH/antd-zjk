// @ts-nocheck
// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
// This will bundle all the site demos and meta data into one file
// which should only async load on search
import { getRouteMetaById } from './route-meta';
import { demoIndexes } from './demos';
import { filesFrontmatter } from './frontmatter';

// generate demos data in runtime, for reuse route.id to reduce bundle size
export const demos = {};

/** @private Internal usage. Safe to refactor. */
export async function loadFilesMeta(idList: string[]) {
  const metaMap: Record<string, any> = {};

  if (idList.includes('theme-editor-cn/index')) {
    metaMap['theme-editor-cn/index'] = async () => {
      const routeMeta = await getRouteMetaById('theme-editor-cn/index');
      const demo = await demoIndexes['theme-editor-cn/index']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['theme-editor-cn/index'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('theme-editor/index')) {
    metaMap['theme-editor/index'] = async () => {
      const routeMeta = await getRouteMetaById('theme-editor/index');
      const demo = await demoIndexes['theme-editor/index']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['theme-editor/index'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('index/index')) {
    metaMap['index/index'] = async () => {
      const routeMeta = await getRouteMetaById('index/index');
      const demo = await demoIndexes['index/index']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['index/index'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/row-selection-and-operation')) {
    metaMap['docs/components/table/demo/row-selection-and-operation'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/row-selection-and-operation');
      const demo = await demoIndexes['docs/components/table/demo/row-selection-and-operation']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/row-selection-and-operation'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/custom-select-all-labels')) {
    metaMap['docs/components/transfer/demo/custom-select-all-labels'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/custom-select-all-labels');
      const demo = await demoIndexes['docs/components/transfer/demo/custom-select-all-labels']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/custom-select-all-labels'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/non-case-sensitive')) {
    metaMap['docs/components/auto-complete/demo/non-case-sensitive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/non-case-sensitive');
      const demo = await demoIndexes['docs/components/auto-complete/demo/non-case-sensitive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/non-case-sensitive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/uncertain-category')) {
    metaMap['docs/components/auto-complete/demo/uncertain-category'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/uncertain-category');
      const demo = await demoIndexes['docs/components/auto-complete/demo/uncertain-category']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/uncertain-category'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/dynamic-form-items-no-style')) {
    metaMap['docs/components/form/demo/dynamic-form-items-no-style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/dynamic-form-items-no-style');
      const demo = await demoIndexes['docs/components/form/demo/dynamic-form-items-no-style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/dynamic-form-items-no-style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/preview-group-top-progress')) {
    metaMap['docs/components/image/demo/preview-group-top-progress'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/preview-group-top-progress');
      const demo = await demoIndexes['docs/components/image/demo/preview-group-top-progress']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/preview-group-top-progress'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/row-selection-custom-debug')) {
    metaMap['docs/components/table/demo/row-selection-custom-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/row-selection-custom-debug');
      const demo = await demoIndexes['docs/components/table/demo/row-selection-custom-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/row-selection-custom-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/upload-custom-action-icon')) {
    metaMap['docs/components/upload/demo/upload-custom-action-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/upload-custom-action-icon');
      const demo = await demoIndexes['docs/components/upload/demo/upload-custom-action-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/upload-custom-action-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/colorful-with-count-debug')) {
    metaMap['docs/components/badge/demo/colorful-with-count-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/colorful-with-count-debug');
      const demo = await demoIndexes['docs/components/badge/demo/colorful-with-count-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/colorful-with-count-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/dynamic-form-items-complex')) {
    metaMap['docs/components/form/demo/dynamic-form-items-complex'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/dynamic-form-items-complex');
      const demo = await demoIndexes['docs/components/form/demo/dynamic-form-items-complex']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/dynamic-form-items-complex'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/destroy-tooltip-on-hide')) {
    metaMap['docs/components/tooltip/demo/destroy-tooltip-on-hide'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/destroy-tooltip-on-hide');
      const demo = await demoIndexes['docs/components/tooltip/demo/destroy-tooltip-on-hide']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/destroy-tooltip-on-hide'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/componentToken-debug')) {
    metaMap['docs/components/typography/demo/componentToken-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/componentToken-debug');
      const demo = await demoIndexes['docs/components/typography/demo/componentToken-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/componentToken-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/certain-category')) {
    metaMap['docs/components/auto-complete/demo/certain-category'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/certain-category');
      const demo = await demoIndexes['docs/components/auto-complete/demo/certain-category']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/certain-category'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/demo/separator-component')) {
    metaMap['docs/components/breadcrumb/demo/separator-component'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/demo/separator-component');
      const demo = await demoIndexes['docs/components/breadcrumb/demo/separator-component']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/demo/separator-component'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/debug-disable-popover')) {
    metaMap['docs/components/checkbox/demo/debug-disable-popover'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/debug-disable-popover');
      const demo = await demoIndexes['docs/components/checkbox/demo/debug-disable-popover']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/debug-disable-popover'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/change-completed')) {
    metaMap['docs/components/color-picker/demo/change-completed'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/change-completed');
      const demo = await demoIndexes['docs/components/color-picker/demo/change-completed']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/change-completed'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/customized-form-controls')) {
    metaMap['docs/components/form/demo/customized-form-controls'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/customized-form-controls');
      const demo = await demoIndexes['docs/components/form/demo/customized-form-controls']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/customized-form-controls'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/automatic-tokenization')) {
    metaMap['docs/components/select/demo/automatic-tokenization'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/automatic-tokenization');
      const demo = await demoIndexes['docs/components/select/demo/automatic-tokenization']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/automatic-tokenization'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/compact-button-vertical')) {
    metaMap['docs/components/space/demo/compact-button-vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/compact-button-vertical');
      const demo = await demoIndexes['docs/components/space/demo/compact-button-vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/compact-button-vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/customized-progress-dot')) {
    metaMap['docs/components/steps/demo/customized-progress-dot'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/customized-progress-dot');
      const demo = await demoIndexes['docs/components/steps/demo/customized-progress-dot']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/customized-progress-dot'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/ellipsis-custom-tooltip')) {
    metaMap['docs/components/table/demo/ellipsis-custom-tooltip'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/ellipsis-custom-tooltip');
      const demo = await demoIndexes['docs/components/table/demo/ellipsis-custom-tooltip']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/ellipsis-custom-tooltip'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/nest-table-border-debug')) {
    metaMap['docs/components/table/demo/nest-table-border-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/nest-table-border-debug');
      const demo = await demoIndexes['docs/components/table/demo/nest-table-border-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/nest-table-border-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/customize-progress-bar')) {
    metaMap['docs/components/upload/demo/customize-progress-bar'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/customize-progress-bar');
      const demo = await demoIndexes['docs/components/upload/demo/customize-progress-bar']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/customize-progress-bar'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/upload-with-aliyun-oss')) {
    metaMap['docs/components/upload/demo/upload-with-aliyun-oss'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/upload-with-aliyun-oss');
      const demo = await demoIndexes['docs/components/upload/demo/upload-with-aliyun-oss']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/upload-with-aliyun-oss'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/chinese-chars-loading')) {
    metaMap['docs/components/button/demo/chinese-chars-loading'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/chinese-chars-loading');
      const demo = await demoIndexes['docs/components/button/demo/chinese-chars-loading']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/chinese-chars-loading'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/showCheckedStrategy')) {
    metaMap['docs/components/cascader/demo/showCheckedStrategy'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/showCheckedStrategy');
      const demo = await demoIndexes['docs/components/cascader/demo/showCheckedStrategy']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/showCheckedStrategy'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/component-token')) {
    metaMap['docs/components/descriptions/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/component-token');
      const demo = await demoIndexes['docs/components/descriptions/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/vertical-border')) {
    metaMap['docs/components/descriptions/demo/vertical-border'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/vertical-border');
      const demo = await demoIndexes['docs/components/descriptions/demo/vertical-border']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/vertical-border'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/interval-options')) {
    metaMap['docs/components/time-picker/demo/interval-options'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/interval-options');
      const demo = await demoIndexes['docs/components/time-picker/demo/interval-options']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/interval-options'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/auto-adjust-overflow')) {
    metaMap['docs/components/tooltip/demo/auto-adjust-overflow'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/auto-adjust-overflow');
      const demo = await demoIndexes['docs/components/tooltip/demo/auto-adjust-overflow']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/auto-adjust-overflow'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/disabled-alpha')) {
    metaMap['docs/components/color-picker/demo/disabled-alpha'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/disabled-alpha');
      const demo = await demoIndexes['docs/components/color-picker/demo/disabled-alpha']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/disabled-alpha'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/component-token')) {
    metaMap['docs/components/date-picker/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/component-token');
      const demo = await demoIndexes['docs/components/date-picker/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/select-in-range')) {
    metaMap['docs/components/date-picker/demo/select-in-range'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/select-in-range');
      const demo = await demoIndexes['docs/components/date-picker/demo/select-in-range']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/select-in-range'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/preview-group-visible')) {
    metaMap['docs/components/image/demo/preview-group-visible'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/preview-group-visible');
      const demo = await demoIndexes['docs/components/image/demo/preview-group-visible']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/preview-group-visible'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/custom-trigger-debug')) {
    metaMap['docs/components/layout/demo/custom-trigger-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/custom-trigger-debug');
      const demo = await demoIndexes['docs/components/layout/demo/custom-trigger-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/custom-trigger-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/custom-mouse-position')) {
    metaMap['docs/components/modal/demo/custom-mouse-position'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/custom-mouse-position');
      const demo = await demoIndexes['docs/components/modal/demo/custom-mouse-position']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/custom-mouse-position'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/custom-dropdown-menu')) {
    metaMap['docs/components/select/demo/custom-dropdown-menu'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/custom-dropdown-menu');
      const demo = await demoIndexes['docs/components/select/demo/custom-dropdown-menu']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/custom-dropdown-menu'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/component-token')) {
    metaMap['docs/components/tree-select/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/component-token');
      const demo = await demoIndexes['docs/components/tree-select/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/render-panel')) {
    metaMap['docs/components/auto-complete/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/render-panel');
      const demo = await demoIndexes['docs/components/auto-complete/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/demo/component-token')) {
    metaMap['docs/components/breadcrumb/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/demo/component-token');
      const demo = await demoIndexes['docs/components/breadcrumb/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/trigger-event')) {
    metaMap['docs/components/color-picker/demo/trigger-event'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/trigger-event');
      const demo = await demoIndexes['docs/components/color-picker/demo/trigger-event']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/trigger-event'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/custom-feedback-icons')) {
    metaMap['docs/components/form/demo/custom-feedback-icons'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/custom-feedback-icons');
      const demo = await demoIndexes['docs/components/form/demo/custom-feedback-icons']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/custom-feedback-icons'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/time-related-controls')) {
    metaMap['docs/components/form/demo/time-related-controls'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/time-related-controls');
      const demo = await demoIndexes['docs/components/form/demo/time-related-controls']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/time-related-controls'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/search-input-loading')) {
    metaMap['docs/components/input/demo/search-input-loading'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/search-input-loading');
      const demo = await demoIndexes['docs/components/input/demo/search-input-loading']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/search-input-loading'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/component-token')) {
    metaMap['docs/components/pagination/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/component-token');
      const demo = await demoIndexes['docs/components/pagination/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/dynamic-trigger')) {
    metaMap['docs/components/popconfirm/demo/dynamic-trigger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/dynamic-trigger');
      const demo = await demoIndexes['docs/components/popconfirm/demo/dynamic-trigger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/dynamic-trigger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/radiogroup-with-name')) {
    metaMap['docs/components/radio/demo/radiogroup-with-name'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/radiogroup-with-name');
      const demo = await demoIndexes['docs/components/radio/demo/radiogroup-with-name']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/radiogroup-with-name'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/option-label-center')) {
    metaMap['docs/components/select/demo/option-label-center'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/option-label-center');
      const demo = await demoIndexes['docs/components/select/demo/option-label-center']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/option-label-center'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/drag-sorting-handler')) {
    metaMap['docs/components/table/demo/drag-sorting-handler'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/drag-sorting-handler');
      const demo = await demoIndexes['docs/components/table/demo/drag-sorting-handler']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/drag-sorting-handler'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/fixed-columns-header')) {
    metaMap['docs/components/table/demo/fixed-columns-header'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/fixed-columns-header');
      const demo = await demoIndexes['docs/components/table/demo/fixed-columns-header']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/fixed-columns-header'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/row-selection-custom')) {
    metaMap['docs/components/table/demo/row-selection-custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/row-selection-custom');
      const demo = await demoIndexes['docs/components/table/demo/row-selection-custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/row-selection-custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/ellipsis-middle')) {
    metaMap['docs/components/typography/demo/ellipsis-middle'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/ellipsis-middle');
      const demo = await demoIndexes['docs/components/typography/demo/ellipsis-middle']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/ellipsis-middle'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/paragraph-debug')) {
    metaMap['docs/components/typography/demo/paragraph-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/paragraph-debug');
      const demo = await demoIndexes['docs/components/typography/demo/paragraph-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/paragraph-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/customizeHighlight')) {
    metaMap['docs/components/anchor/demo/customizeHighlight'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/customizeHighlight');
      const demo = await demoIndexes['docs/components/anchor/demo/customizeHighlight']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/customizeHighlight'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/demo/customize-header')) {
    metaMap['docs/components/calendar/demo/customize-header'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/demo/customize-header');
      const demo = await demoIndexes['docs/components/calendar/demo/customize-header']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/demo/customize-header'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/change-on-select')) {
    metaMap['docs/components/cascader/demo/change-on-select'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/change-on-select');
      const demo = await demoIndexes['docs/components/cascader/demo/change-on-select']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/change-on-select'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/panel-render')) {
    metaMap['docs/components/color-picker/demo/panel-render'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/panel-render');
      const demo = await demoIndexes['docs/components/color-picker/demo/panel-render']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/panel-render'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/direction')) {
    metaMap['docs/components/config-provider/demo/direction'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/direction');
      const demo = await demoIndexes['docs/components/config-provider/demo/direction']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/direction'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/prefixCls')) {
    metaMap['docs/components/config-provider/demo/prefixCls'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/prefixCls');
      const demo = await demoIndexes['docs/components/config-provider/demo/prefixCls']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/prefixCls'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/useConfig')) {
    metaMap['docs/components/config-provider/demo/useConfig'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/useConfig');
      const demo = await demoIndexes['docs/components/config-provider/demo/useConfig']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/useConfig'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/disabled-date')) {
    metaMap['docs/components/date-picker/demo/disabled-date'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/disabled-date');
      const demo = await demoIndexes['docs/components/date-picker/demo/disabled-date']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/disabled-date'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/preset-ranges')) {
    metaMap['docs/components/date-picker/demo/preset-ranges'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/preset-ranges');
      const demo = await demoIndexes['docs/components/date-picker/demo/preset-ranges']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/preset-ranges'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/multi-level-drawer')) {
    metaMap['docs/components/drawer/demo/multi-level-drawer'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/multi-level-drawer');
      const demo = await demoIndexes['docs/components/drawer/demo/multi-level-drawer']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/multi-level-drawer'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/render-panel')) {
    metaMap['docs/components/float-button/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/render-panel');
      const demo = await demoIndexes['docs/components/float-button/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/complex-form-control')) {
    metaMap['docs/components/form/demo/complex-form-control'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/complex-form-control');
      const demo = await demoIndexes['docs/components/form/demo/complex-form-control']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/complex-form-control'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/disabled-input-debug')) {
    metaMap['docs/components/form/demo/disabled-input-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/disabled-input-debug');
      const demo = await demoIndexes['docs/components/form/demo/disabled-input-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/disabled-input-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/textarea-show-count')) {
    metaMap['docs/components/input/demo/textarea-show-count'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/textarea-show-count');
      const demo = await demoIndexes['docs/components/input/demo/textarea-show-count']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/textarea-show-count'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/out-of-range')) {
    metaMap['docs/components/input-number/demo/out-of-range'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/out-of-range');
      const demo = await demoIndexes['docs/components/input-number/demo/out-of-range']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/out-of-range'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/render-panel')) {
    metaMap['docs/components/input-number/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/render-panel');
      const demo = await demoIndexes['docs/components/input-number/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/custom-style')) {
    metaMap['docs/components/notification/demo/custom-style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/custom-style');
      const demo = await demoIndexes['docs/components/notification/demo/custom-style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/custom-style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/render-panel')) {
    metaMap['docs/components/notification/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/render-panel');
      const demo = await demoIndexes['docs/components/notification/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/size-consistent')) {
    metaMap['docs/components/segmented/demo/size-consistent'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/size-consistent');
      const demo = await demoIndexes['docs/components/segmented/demo/size-consistent']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/size-consistent'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/demo/component-token')) {
    metaMap['docs/components/statistic/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/demo/component-token');
      const demo = await demoIndexes['docs/components/statistic/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/custom-filter-panel')) {
    metaMap['docs/components/table/demo/custom-filter-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/custom-filter-panel');
      const demo = await demoIndexes['docs/components/table/demo/custom-filter-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/custom-filter-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/row-selection-debug')) {
    metaMap['docs/components/table/demo/row-selection-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/row-selection-debug');
      const demo = await demoIndexes['docs/components/table/demo/row-selection-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/row-selection-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/tree-table-ellipsis')) {
    metaMap['docs/components/table/demo/tree-table-ellipsis'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/tree-table-ellipsis');
      const demo = await demoIndexes['docs/components/table/demo/tree-table-ellipsis']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/tree-table-ellipsis'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/colored-popup')) {
    metaMap['docs/components/time-picker/demo/colored-popup'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/colored-popup');
      const demo = await demoIndexes['docs/components/time-picker/demo/colored-popup']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/colored-popup'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/ellipsis-debug')) {
    metaMap['docs/components/typography/demo/ellipsis-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/ellipsis-debug');
      const demo = await demoIndexes['docs/components/typography/demo/ellipsis-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/ellipsis-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/allowClear')) {
    metaMap['docs/components/auto-complete/demo/allowClear'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/allowClear');
      const demo = await demoIndexes['docs/components/auto-complete/demo/allowClear']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/allowClear'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/borderless')) {
    metaMap['docs/components/auto-complete/demo/borderless'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/borderless');
      const demo = await demoIndexes['docs/components/auto-complete/demo/borderless']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/borderless'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/form-debug')) {
    metaMap['docs/components/auto-complete/demo/form-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/form-debug');
      const demo = await demoIndexes['docs/components/auto-complete/demo/form-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/form-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/demo/component-token')) {
    metaMap['docs/components/calendar/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/demo/component-token');
      const demo = await demoIndexes['docs/components/calendar/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/demo/notice-calendar')) {
    metaMap['docs/components/calendar/demo/notice-calendar'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/demo/notice-calendar');
      const demo = await demoIndexes['docs/components/calendar/demo/notice-calendar']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/demo/notice-calendar'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/carousel/demo/component-token')) {
    metaMap['docs/components/carousel/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/carousel/demo/component-token');
      const demo = await demoIndexes['docs/components/carousel/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/carousel/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/custom-dropdown')) {
    metaMap['docs/components/cascader/demo/custom-dropdown'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/custom-dropdown');
      const demo = await demoIndexes['docs/components/cascader/demo/custom-dropdown']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/custom-dropdown'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/disabled-option')) {
    metaMap['docs/components/cascader/demo/disabled-option'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/disabled-option');
      const demo = await demoIndexes['docs/components/cascader/demo/disabled-option']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/disabled-option'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/component-token')) {
    metaMap['docs/components/collapse/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/component-token');
      const demo = await demoIndexes['docs/components/collapse/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/text-render')) {
    metaMap['docs/components/color-picker/demo/text-render'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/text-render');
      const demo = await demoIndexes['docs/components/color-picker/demo/text-render']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/text-render'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/extra-footer')) {
    metaMap['docs/components/date-picker/demo/extra-footer'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/extra-footer');
      const demo = await demoIndexes['docs/components/date-picker/demo/extra-footer']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/extra-footer'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/range-picker')) {
    metaMap['docs/components/date-picker/demo/range-picker'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/range-picker');
      const demo = await demoIndexes['docs/components/date-picker/demo/range-picker']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/range-picker'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/render-panel')) {
    metaMap['docs/components/date-picker/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/render-panel');
      const demo = await demoIndexes['docs/components/date-picker/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/render-in-current')) {
    metaMap['docs/components/drawer/demo/render-in-current'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/render-in-current');
      const demo = await demoIndexes['docs/components/drawer/demo/render-in-current']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/render-in-current'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/custom-dropdown')) {
    metaMap['docs/components/dropdown/demo/custom-dropdown'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/custom-dropdown');
      const demo = await demoIndexes['docs/components/dropdown/demo/custom-dropdown']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/custom-dropdown'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/dropdown-button')) {
    metaMap['docs/components/dropdown/demo/dropdown-button'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/dropdown-button');
      const demo = await demoIndexes['docs/components/dropdown/demo/dropdown-button']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/dropdown-button'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/badge-debug')) {
    metaMap['docs/components/float-button/demo/badge-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/badge-debug');
      const demo = await demoIndexes['docs/components/float-button/demo/badge-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/badge-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/description')) {
    metaMap['docs/components/float-button/demo/description'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/description');
      const demo = await demoIndexes['docs/components/float-button/demo/description']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/description'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/without-form-create')) {
    metaMap['docs/components/form/demo/without-form-create'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/without-form-create');
      const demo = await demoIndexes['docs/components/form/demo/without-form-create']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/without-form-create'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/controlled-preview')) {
    metaMap['docs/components/image/demo/controlled-preview'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/controlled-preview');
      const demo = await demoIndexes['docs/components/image/demo/controlled-preview']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/controlled-preview'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/debug-token')) {
    metaMap['docs/components/input-number/demo/debug-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/debug-token');
      const demo = await demoIndexes['docs/components/input-number/demo/debug-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/debug-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/component-token')) {
    metaMap['docs/components/mentions/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/component-token');
      const demo = await demoIndexes['docs/components/mentions/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/custom-icon')) {
    metaMap['docs/components/notification/demo/custom-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/custom-icon');
      const demo = await demoIndexes['docs/components/notification/demo/custom-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/custom-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/hover-with-click')) {
    metaMap['docs/components/popover/demo/hover-with-click'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/hover-with-click');
      const demo = await demoIndexes['docs/components/popover/demo/hover-with-click']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/hover-with-click'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/component-token')) {
    metaMap['docs/components/progress/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/component-token');
      const demo = await demoIndexes['docs/components/progress/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/radiogroup-options')) {
    metaMap['docs/components/radio/demo/radiogroup-options'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/radiogroup-options');
      const demo = await demoIndexes['docs/components/radio/demo/radiogroup-options']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/radiogroup-options'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/componentToken')) {
    metaMap['docs/components/segmented/demo/componentToken'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/componentToken');
      const demo = await demoIndexes['docs/components/segmented/demo/componentToken']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/componentToken'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/controlled-two')) {
    metaMap['docs/components/segmented/demo/controlled-two'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/controlled-two');
      const demo = await demoIndexes['docs/components/segmented/demo/controlled-two']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/controlled-two'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/custom-tag-render')) {
    metaMap['docs/components/select/demo/custom-tag-render'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/custom-tag-render');
      const demo = await demoIndexes['docs/components/select/demo/custom-tag-render']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/custom-tag-render'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/option-label-prop')) {
    metaMap['docs/components/select/demo/option-label-prop'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/option-label-prop');
      const demo = await demoIndexes['docs/components/select/demo/option-label-prop']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/option-label-prop'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/progress-dot-small')) {
    metaMap['docs/components/steps/demo/progress-dot-small'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/progress-dot-small');
      const demo = await demoIndexes['docs/components/steps/demo/progress-dot-small']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/progress-dot-small'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/custom-tab-bar-node')) {
    metaMap['docs/components/tabs/demo/custom-tab-bar-node'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/custom-tab-bar-node');
      const demo = await demoIndexes['docs/components/tabs/demo/custom-tab-bar-node']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/custom-tab-bar-node'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/range-picker')) {
    metaMap['docs/components/time-picker/demo/range-picker'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/range-picker');
      const demo = await demoIndexes['docs/components/time-picker/demo/range-picker']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/range-picker'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/render-panel')) {
    metaMap['docs/components/time-picker/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/render-panel');
      const demo = await demoIndexes['docs/components/time-picker/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/component-token')) {
    metaMap['docs/components/timeline/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/component-token');
      const demo = await demoIndexes['docs/components/timeline/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/component-token')) {
    metaMap['docs/components/transfer/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/component-token');
      const demo = await demoIndexes['docs/components/transfer/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/render-panel')) {
    metaMap['docs/components/tree-select/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/render-panel');
      const demo = await demoIndexes['docs/components/tree-select/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/demo/debug-routes')) {
    metaMap['docs/components/breadcrumb/demo/debug-routes'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/demo/debug-routes');
      const demo = await demoIndexes['docs/components/breadcrumb/demo/debug-routes']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/demo/debug-routes'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/custom-trigger')) {
    metaMap['docs/components/cascader/demo/custom-trigger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/custom-trigger');
      const demo = await demoIndexes['docs/components/cascader/demo/custom-trigger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/custom-trigger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/allowClear')) {
    metaMap['docs/components/color-picker/demo/allowClear'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/allowClear');
      const demo = await demoIndexes['docs/components/color-picker/demo/allowClear']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/allowClear'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/controlled')) {
    metaMap['docs/components/color-picker/demo/controlled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/controlled');
      const demo = await demoIndexes['docs/components/color-picker/demo/controlled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/controlled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/pure-panel')) {
    metaMap['docs/components/color-picker/demo/pure-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/pure-panel');
      const demo = await demoIndexes['docs/components/color-picker/demo/pure-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/pure-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/warning')) {
    metaMap['docs/components/config-provider/demo/warning'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/warning');
      const demo = await demoIndexes['docs/components/config-provider/demo/warning']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/warning'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/cell-render')) {
    metaMap['docs/components/date-picker/demo/cell-render'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/cell-render');
      const demo = await demoIndexes['docs/components/date-picker/demo/cell-render']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/cell-render'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/responsive')) {
    metaMap['docs/components/descriptions/demo/responsive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/responsive');
      const demo = await demoIndexes['docs/components/descriptions/demo/responsive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/responsive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/demo/component-token')) {
    metaMap['docs/components/divider/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/demo/component-token');
      const demo = await demoIndexes['docs/components/divider/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/demo/customize-style')) {
    metaMap['docs/components/divider/demo/customize-style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/demo/customize-style');
      const demo = await demoIndexes['docs/components/divider/demo/customize-style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/demo/customize-style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/controlled')) {
    metaMap['docs/components/float-button/demo/controlled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/controlled');
      const demo = await demoIndexes['docs/components/float-button/demo/controlled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/controlled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/group-menu')) {
    metaMap['docs/components/float-button/demo/group-menu'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/group-menu');
      const demo = await demoIndexes['docs/components/float-button/demo/group-menu']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/group-menu'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/dynamic-form-items')) {
    metaMap['docs/components/form/demo/dynamic-form-items'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/dynamic-form-items');
      const demo = await demoIndexes['docs/components/form/demo/dynamic-form-items']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/dynamic-form-items'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/autosize-textarea')) {
    metaMap['docs/components/input/demo/autosize-textarea'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/autosize-textarea');
      const demo = await demoIndexes['docs/components/input/demo/autosize-textarea']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/autosize-textarea'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/borderless')) {
    metaMap['docs/components/input-number/demo/borderless'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/borderless');
      const demo = await demoIndexes['docs/components/input-number/demo/borderless']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/borderless'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/component-token')) {
    metaMap['docs/components/message/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/component-token');
      const demo = await demoIndexes['docs/components/message/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/render-panel')) {
    metaMap['docs/components/popconfirm/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/render-panel');
      const demo = await demoIndexes['docs/components/popconfirm/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/component-token')) {
    metaMap['docs/components/popover/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/component-token');
      const demo = await demoIndexes['docs/components/popover/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/radiobutton-solid')) {
    metaMap['docs/components/radio/demo/radiobutton-solid'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/radiobutton-solid');
      const demo = await demoIndexes['docs/components/radio/demo/radiobutton-solid']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/radiobutton-solid'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/character-function')) {
    metaMap['docs/components/rate/demo/character-function'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/character-function');
      const demo = await demoIndexes['docs/components/rate/demo/character-function']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/character-function'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/debug-flip-shift')) {
    metaMap['docs/components/select/demo/debug-flip-shift'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/debug-flip-shift');
      const demo = await demoIndexes['docs/components/select/demo/debug-flip-shift']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/debug-flip-shift'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/demo/componentToken')) {
    metaMap['docs/components/skeleton/demo/componentToken'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/demo/componentToken');
      const demo = await demoIndexes['docs/components/skeleton/demo/componentToken']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/demo/componentToken'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/custom-add-trigger')) {
    metaMap['docs/components/tabs/demo/custom-add-trigger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/custom-add-trigger');
      const demo = await demoIndexes['docs/components/tabs/demo/custom-add-trigger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/custom-add-trigger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/hide-column')) {
    metaMap['docs/components/time-picker/demo/hide-column'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/hide-column');
      const demo = await demoIndexes['docs/components/time-picker/demo/hide-column']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/hide-column'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/table-transfer')) {
    metaMap['docs/components/transfer/demo/table-transfer'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/table-transfer');
      const demo = await demoIndexes['docs/components/transfer/demo/table-transfer']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/table-transfer'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/component-token')) {
    metaMap['docs/components/anchor/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/component-token');
      const demo = await demoIndexes['docs/components/anchor/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/component-token')) {
    metaMap['docs/components/button/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/component-token');
      const demo = await demoIndexes['docs/components/button/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/custom-render')) {
    metaMap['docs/components/cascader/demo/custom-render'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/custom-render');
      const demo = await demoIndexes['docs/components/cascader/demo/custom-render']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/custom-render'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/default-value')) {
    metaMap['docs/components/cascader/demo/default-value'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/default-value');
      const demo = await demoIndexes['docs/components/cascader/demo/default-value']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/default-value'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/locale')) {
    metaMap['docs/components/config-provider/demo/locale'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/locale');
      const demo = await demoIndexes['docs/components/config-provider/demo/locale']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/locale'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/index.en-US')) {
    metaMap['docs/components/config-provider/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/index.en-US');
      const demo = await demoIndexes['docs/components/config-provider/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/index.zh-CN')) {
    metaMap['docs/components/config-provider/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/index.zh-CN');
      const demo = await demoIndexes['docs/components/config-provider/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/switchable')) {
    metaMap['docs/components/date-picker/demo/switchable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/switchable');
      const demo = await demoIndexes['docs/components/date-picker/demo/switchable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/switchable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/component-token')) {
    metaMap['docs/components/drawer/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/component-token');
      const demo = await demoIndexes['docs/components/drawer/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/config-provider')) {
    metaMap['docs/components/drawer/demo/config-provider'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/config-provider');
      const demo = await demoIndexes['docs/components/drawer/demo/config-provider']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/config-provider'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/dynamic-form-item')) {
    metaMap['docs/components/form/demo/dynamic-form-item'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/dynamic-form-item');
      const demo = await demoIndexes['docs/components/form/demo/dynamic-form-item']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/dynamic-form-item'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/borderless-debug')) {
    metaMap['docs/components/input/demo/borderless-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/borderless-debug');
      const demo = await demoIndexes['docs/components/input/demo/borderless-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/borderless-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/formatter')) {
    metaMap['docs/components/input-number/demo/formatter'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/formatter');
      const demo = await demoIndexes['docs/components/input-number/demo/formatter']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/formatter'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/component-token')) {
    metaMap['docs/components/layout/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/component-token');
      const demo = await demoIndexes['docs/components/layout/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/placement')) {
    metaMap['docs/components/notification/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/placement');
      const demo = await demoIndexes['docs/components/notification/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/with-icon')) {
    metaMap['docs/components/notification/demo/with-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/with-icon');
      const demo = await demoIndexes['docs/components/notification/demo/with-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/with-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/gradient-line')) {
    metaMap['docs/components/progress/demo/gradient-line'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/gradient-line');
      const demo = await demoIndexes['docs/components/progress/demo/gradient-line']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/gradient-line'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/component-token')) {
    metaMap['docs/components/result/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/component-token');
      const demo = await demoIndexes['docs/components/result/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/component-token')) {
    metaMap['docs/components/select/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/component-token');
      const demo = await demoIndexes['docs/components/select/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/placement-debug')) {
    metaMap['docs/components/select/demo/placement-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/placement-debug');
      const demo = await demoIndexes['docs/components/select/demo/placement-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/placement-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/component-token')) {
    metaMap['docs/components/slider/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/component-token');
      const demo = await demoIndexes['docs/components/slider/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/demo/component-token')) {
    metaMap['docs/components/switch/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/demo/component-token');
      const demo = await demoIndexes['docs/components/switch/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/dynamic-settings')) {
    metaMap['docs/components/table/demo/dynamic-settings'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/dynamic-settings');
      const demo = await demoIndexes['docs/components/table/demo/dynamic-settings']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/dynamic-settings'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/grouping-columns')) {
    metaMap['docs/components/table/demo/grouping-columns'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/grouping-columns');
      const demo = await demoIndexes['docs/components/table/demo/grouping-columns']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/grouping-columns'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/resizable-column')) {
    metaMap['docs/components/table/demo/resizable-column'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/resizable-column');
      const demo = await demoIndexes['docs/components/table/demo/resizable-column']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/resizable-column'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/selections-debug')) {
    metaMap['docs/components/table/demo/selections-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/selections-debug');
      const demo = await demoIndexes['docs/components/table/demo/selections-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/selections-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/tree-transfer')) {
    metaMap['docs/components/transfer/demo/tree-transfer'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/tree-transfer');
      const demo = await demoIndexes['docs/components/transfer/demo/tree-transfer']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/tree-transfer'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/interactive')) {
    metaMap['docs/components/typography/demo/interactive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/interactive');
      const demo = await demoIndexes['docs/components/typography/demo/interactive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/interactive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/component-token')) {
    metaMap['docs/components/upload/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/component-token');
      const demo = await demoIndexes['docs/components/upload/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/defaultFileList')) {
    metaMap['docs/components/upload/demo/defaultFileList'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/defaultFileList');
      const demo = await demoIndexes['docs/components/upload/demo/defaultFileList']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/defaultFileList'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/upload-manually')) {
    metaMap['docs/components/upload/demo/upload-manually'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/upload-manually');
      const demo = await demoIndexes['docs/components/upload/demo/upload-manually']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/upload-manually'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/upload-png-only')) {
    metaMap['docs/components/upload/demo/upload-png-only'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/upload-png-only');
      const demo = await demoIndexes['docs/components/upload/demo/upload-png-only']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/upload-png-only'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/component-token')) {
    metaMap['docs/components/alert/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/component-token');
      const demo = await demoIndexes['docs/components/alert/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/options')) {
    metaMap['docs/components/auto-complete/demo/options'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/options');
      const demo = await demoIndexes['docs/components/auto-complete/demo/options']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/options'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/comonent-token')) {
    metaMap['docs/components/avatar/demo/comonent-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/comonent-token');
      const demo = await demoIndexes['docs/components/avatar/demo/comonent-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/comonent-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/component-token')) {
    metaMap['docs/components/badge/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/component-token');
      const demo = await demoIndexes['docs/components/badge/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/flexible-content')) {
    metaMap['docs/components/card/demo/flexible-content'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/flexible-content');
      const demo = await demoIndexes['docs/components/card/demo/flexible-content']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/flexible-content'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/render-panel')) {
    metaMap['docs/components/cascader/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/render-panel');
      const demo = await demoIndexes['docs/components/cascader/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/disabled')) {
    metaMap['docs/components/color-picker/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/disabled');
      const demo = await demoIndexes['docs/components/color-picker/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/theme')) {
    metaMap['docs/components/config-provider/demo/theme'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/theme');
      const demo = await demoIndexes['docs/components/config-provider/demo/theme']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/theme'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/placement')) {
    metaMap['docs/components/date-picker/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/placement');
      const demo = await demoIndexes['docs/components/date-picker/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/start-end')) {
    metaMap['docs/components/date-picker/demo/start-end'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/start-end');
      const demo = await demoIndexes['docs/components/date-picker/demo/start-end']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/start-end'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/vertical')) {
    metaMap['docs/components/descriptions/demo/vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/vertical');
      const demo = await demoIndexes['docs/components/descriptions/demo/vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/form-in-drawer')) {
    metaMap['docs/components/drawer/demo/form-in-drawer'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/form-in-drawer');
      const demo = await demoIndexes['docs/components/drawer/demo/form-in-drawer']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/form-in-drawer'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/arrow-center')) {
    metaMap['docs/components/dropdown/demo/arrow-center'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/arrow-center');
      const demo = await demoIndexes['docs/components/dropdown/demo/arrow-center']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/arrow-center'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/context-menu')) {
    metaMap['docs/components/dropdown/demo/context-menu'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/context-menu');
      const demo = await demoIndexes['docs/components/dropdown/demo/context-menu']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/context-menu'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/overlay-open')) {
    metaMap['docs/components/dropdown/demo/overlay-open'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/overlay-open');
      const demo = await demoIndexes['docs/components/dropdown/demo/overlay-open']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/overlay-open'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/render-panel')) {
    metaMap['docs/components/dropdown/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/render-panel');
      const demo = await demoIndexes['docs/components/dropdown/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/empty/demo/config-provider')) {
    metaMap['docs/components/empty/demo/config-provider'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/empty/demo/config-provider');
      const demo = await demoIndexes['docs/components/empty/demo/config-provider']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/empty/demo/config-provider'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/back-top')) {
    metaMap['docs/components/float-button/demo/back-top'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/back-top');
      const demo = await demoIndexes['docs/components/float-button/demo/back-top']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/back-top'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/validate-trigger')) {
    metaMap['docs/components/form/demo/validate-trigger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/validate-trigger');
      const demo = await demoIndexes['docs/components/form/demo/validate-trigger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/validate-trigger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/component-token')) {
    metaMap['docs/components/image/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/component-token');
      const demo = await demoIndexes['docs/components/image/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/component-token')) {
    metaMap['docs/components/input/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/component-token');
      const demo = await demoIndexes['docs/components/input/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/textarea-resize')) {
    metaMap['docs/components/input/demo/textarea-resize'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/textarea-resize');
      const demo = await demoIndexes['docs/components/input/demo/textarea-resize']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/textarea-resize'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/controls')) {
    metaMap['docs/components/input-number/demo/controls'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/controls');
      const demo = await demoIndexes['docs/components/input-number/demo/controls']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/controls'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/disabled')) {
    metaMap['docs/components/input-number/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/disabled');
      const demo = await demoIndexes['docs/components/input-number/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/keyboard')) {
    metaMap['docs/components/input-number/demo/keyboard'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/keyboard');
      const demo = await demoIndexes['docs/components/input-number/demo/keyboard']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/keyboard'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/custom-trigger')) {
    metaMap['docs/components/layout/demo/custom-trigger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/custom-trigger');
      const demo = await demoIndexes['docs/components/layout/demo/custom-trigger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/custom-trigger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/render-panel')) {
    metaMap['docs/components/mentions/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/render-panel');
      const demo = await demoIndexes['docs/components/mentions/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/inline-collapsed')) {
    metaMap['docs/components/menu/demo/inline-collapsed'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/inline-collapsed');
      const demo = await demoIndexes['docs/components/menu/demo/inline-collapsed']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/inline-collapsed'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/component-token')) {
    metaMap['docs/components/modal/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/component-token');
      const demo = await demoIndexes['docs/components/modal/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/duration')) {
    metaMap['docs/components/notification/demo/duration'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/duration');
      const demo = await demoIndexes['docs/components/notification/demo/duration']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/duration'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/with-btn')) {
    metaMap['docs/components/notification/demo/with-btn'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/with-btn');
      const demo = await demoIndexes['docs/components/notification/demo/with-btn']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/with-btn'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/controlled')) {
    metaMap['docs/components/pagination/demo/controlled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/controlled');
      const demo = await demoIndexes['docs/components/pagination/demo/controlled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/controlled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/itemRender')) {
    metaMap['docs/components/pagination/demo/itemRender'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/itemRender');
      const demo = await demoIndexes['docs/components/pagination/demo/itemRender']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/itemRender'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/circle-micro')) {
    metaMap['docs/components/progress/demo/circle-micro'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/circle-micro');
      const demo = await demoIndexes['docs/components/progress/demo/circle-micro']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/circle-micro'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/component-token')) {
    metaMap['docs/components/radio/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/component-token');
      const demo = await demoIndexes['docs/components/radio/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/radiogroup-more')) {
    metaMap['docs/components/radio/demo/radiogroup-more'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/radiogroup-more');
      const demo = await demoIndexes['docs/components/radio/demo/radiogroup-more']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/radiogroup-more'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/label-in-value')) {
    metaMap['docs/components/select/demo/label-in-value'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/label-in-value');
      const demo = await demoIndexes['docs/components/select/demo/label-in-value']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/label-in-value'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/draggableTrack')) {
    metaMap['docs/components/slider/demo/draggableTrack'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/draggableTrack');
      const demo = await demoIndexes['docs/components/slider/demo/draggableTrack']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/draggableTrack'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/compact-buttons')) {
    metaMap['docs/components/space/demo/compact-buttons'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/compact-buttons');
      const demo = await demoIndexes['docs/components/space/demo/compact-buttons']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/compact-buttons'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/demo/custom-indicator')) {
    metaMap['docs/components/spin/demo/custom-indicator'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/demo/custom-indicator');
      const demo = await demoIndexes['docs/components/spin/demo/custom-indicator']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/demo/custom-indicator'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/demo/delayAndDebounce')) {
    metaMap['docs/components/spin/demo/delayAndDebounce'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/demo/delayAndDebounce');
      const demo = await demoIndexes['docs/components/spin/demo/delayAndDebounce']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/demo/delayAndDebounce'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/component-token')) {
    metaMap['docs/components/steps/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/component-token');
      const demo = await demoIndexes['docs/components/steps/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/label-placement')) {
    metaMap['docs/components/steps/demo/label-placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/label-placement');
      const demo = await demoIndexes['docs/components/steps/demo/label-placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/label-placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/colspan-rowspan')) {
    metaMap['docs/components/table/demo/colspan-rowspan'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/colspan-rowspan');
      const demo = await demoIndexes['docs/components/table/demo/colspan-rowspan']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/colspan-rowspan'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/component-token')) {
    metaMap['docs/components/table/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/component-token');
      const demo = await demoIndexes['docs/components/table/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/multiple-sorter')) {
    metaMap['docs/components/table/demo/multiple-sorter'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/multiple-sorter');
      const demo = await demoIndexes['docs/components/table/demo/multiple-sorter']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/multiple-sorter'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/custom-indicator')) {
    metaMap['docs/components/tabs/demo/custom-indicator'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/custom-indicator');
      const demo = await demoIndexes['docs/components/tabs/demo/custom-indicator']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/custom-indicator'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/basic-controlled')) {
    metaMap['docs/components/tree/demo/basic-controlled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/basic-controlled');
      const demo = await demoIndexes['docs/components/tree/demo/basic-controlled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/basic-controlled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/checkable')) {
    metaMap['docs/components/tree-select/demo/checkable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/checkable');
      const demo = await demoIndexes['docs/components/tree-select/demo/checkable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/checkable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/placement')) {
    metaMap['docs/components/tree-select/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/placement');
      const demo = await demoIndexes['docs/components/tree-select/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/picture-circle')) {
    metaMap['docs/components/upload/demo/picture-circle'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/picture-circle');
      const demo = await demoIndexes['docs/components/upload/demo/picture-circle']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/picture-circle'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/transform-file')) {
    metaMap['docs/components/upload/demo/transform-file'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/transform-file');
      const demo = await demoIndexes['docs/components/upload/demo/transform-file']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/transform-file'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/error-boundary')) {
    metaMap['docs/components/alert/demo/error-boundary'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/error-boundary');
      const demo = await demoIndexes['docs/components/alert/demo/error-boundary']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/error-boundary'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/legacy-anchor')) {
    metaMap['docs/components/anchor/demo/legacy-anchor'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/legacy-anchor');
      const demo = await demoIndexes['docs/components/anchor/demo/legacy-anchor']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/legacy-anchor'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/custom')) {
    metaMap['docs/components/auto-complete/demo/custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/custom');
      const demo = await demoIndexes['docs/components/auto-complete/demo/custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/status')) {
    metaMap['docs/components/auto-complete/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/status');
      const demo = await demoIndexes['docs/components/auto-complete/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/index.en-US')) {
    metaMap['docs/components/auto-complete/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/index.en-US');
      const demo = await demoIndexes['docs/components/auto-complete/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/index.zh-CN')) {
    metaMap['docs/components/auto-complete/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/index.zh-CN');
      const demo = await demoIndexes['docs/components/auto-complete/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/demo/separator')) {
    metaMap['docs/components/breadcrumb/demo/separator'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/demo/separator');
      const demo = await demoIndexes['docs/components/breadcrumb/demo/separator']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/demo/separator'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/component-token')) {
    metaMap['docs/components/card/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/component-token');
      const demo = await demoIndexes['docs/components/card/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/fields-name')) {
    metaMap['docs/components/cascader/demo/fields-name'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/fields-name');
      const demo = await demoIndexes['docs/components/cascader/demo/fields-name']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/fields-name'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/collapsible')) {
    metaMap['docs/components/collapse/demo/collapsible'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/collapsible');
      const demo = await demoIndexes['docs/components/collapse/demo/collapsible']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/collapsible'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/presets')) {
    metaMap['docs/components/color-picker/demo/presets'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/presets');
      const demo = await demoIndexes['docs/components/color-picker/demo/presets']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/presets'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/trigger')) {
    metaMap['docs/components/color-picker/demo/trigger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/trigger');
      const demo = await demoIndexes['docs/components/color-picker/demo/trigger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/trigger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/size')) {
    metaMap['docs/components/config-provider/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/size');
      const demo = await demoIndexes['docs/components/config-provider/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/config-provider/demo/wave')) {
    metaMap['docs/components/config-provider/demo/wave'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/config-provider/demo/wave');
      const demo = await demoIndexes['docs/components/config-provider/demo/wave']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/config-provider/demo/wave'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/bordered')) {
    metaMap['docs/components/date-picker/demo/bordered'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/bordered');
      const demo = await demoIndexes['docs/components/date-picker/demo/bordered']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/bordered'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/disabled')) {
    metaMap['docs/components/date-picker/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/disabled');
      const demo = await demoIndexes['docs/components/date-picker/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/tooltip')) {
    metaMap['docs/components/float-button/demo/tooltip'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/tooltip');
      const demo = await demoIndexes['docs/components/float-button/demo/tooltip']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/tooltip'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/advanced-search')) {
    metaMap['docs/components/form/demo/advanced-search'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/advanced-search');
      const demo = await demoIndexes['docs/components/form/demo/advanced-search']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/advanced-search'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/component-token')) {
    metaMap['docs/components/form/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/component-token');
      const demo = await demoIndexes['docs/components/form/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/layout-can-wrap')) {
    metaMap['docs/components/form/demo/layout-can-wrap'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/layout-can-wrap');
      const demo = await demoIndexes['docs/components/form/demo/layout-can-wrap']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/layout-can-wrap'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/validate-static')) {
    metaMap['docs/components/form/demo/validate-static'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/validate-static');
      const demo = await demoIndexes['docs/components/form/demo/validate-static']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/validate-static'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/responsive-more')) {
    metaMap['docs/components/grid/demo/responsive-more'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/responsive-more');
      const demo = await demoIndexes['docs/components/grid/demo/responsive-more']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/responsive-more'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/password-input')) {
    metaMap['docs/components/input/demo/password-input'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/password-input');
      const demo = await demoIndexes['docs/components/input/demo/password-input']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/password-input'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/component-token')) {
    metaMap['docs/components/list/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/component-token');
      const demo = await demoIndexes['docs/components/list/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/component-token')) {
    metaMap['docs/components/menu/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/component-token');
      const demo = await demoIndexes['docs/components/menu/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/horizontal-dark')) {
    metaMap['docs/components/menu/demo/horizontal-dark'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/horizontal-dark');
      const demo = await demoIndexes['docs/components/menu/demo/horizontal-dark']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/horizontal-dark'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/custom-style')) {
    metaMap['docs/components/message/demo/custom-style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/custom-style');
      const demo = await demoIndexes['docs/components/message/demo/custom-style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/custom-style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/render-panel')) {
    metaMap['docs/components/message/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/render-panel');
      const demo = await demoIndexes['docs/components/message/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/confirm-router')) {
    metaMap['docs/components/modal/demo/confirm-router'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/confirm-router');
      const demo = await demoIndexes['docs/components/modal/demo/confirm-router']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/confirm-router'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/wireframe')) {
    metaMap['docs/components/pagination/demo/wireframe'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/wireframe');
      const demo = await demoIndexes['docs/components/pagination/demo/wireframe']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/wireframe'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/placement')) {
    metaMap['docs/components/popconfirm/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/placement');
      const demo = await demoIndexes['docs/components/popconfirm/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/wireframe')) {
    metaMap['docs/components/popconfirm/demo/wireframe'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/wireframe');
      const demo = await demoIndexes['docs/components/popconfirm/demo/wireframe']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/wireframe'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/render-panel')) {
    metaMap['docs/components/popover/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/render-panel');
      const demo = await demoIndexes['docs/components/popover/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/circle-mini')) {
    metaMap['docs/components/progress/demo/circle-mini'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/circle-mini');
      const demo = await demoIndexes['docs/components/progress/demo/circle-mini']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/circle-mini'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/component-token')) {
    metaMap['docs/components/rate/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/component-token');
      const demo = await demoIndexes['docs/components/rate/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/controlled')) {
    metaMap['docs/components/segmented/demo/controlled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/controlled');
      const demo = await demoIndexes['docs/components/segmented/demo/controlled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/controlled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/hide-selected')) {
    metaMap['docs/components/select/demo/hide-selected'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/hide-selected');
      const demo = await demoIndexes['docs/components/select/demo/hide-selected']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/hide-selected'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/tip-formatter')) {
    metaMap['docs/components/slider/demo/tip-formatter'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/tip-formatter');
      const demo = await demoIndexes['docs/components/slider/demo/tip-formatter']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/tip-formatter'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/compact-nested')) {
    metaMap['docs/components/space/demo/compact-nested'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/compact-nested');
      const demo = await demoIndexes['docs/components/space/demo/compact-nested']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/compact-nested'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/progress-debug')) {
    metaMap['docs/components/steps/demo/progress-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/progress-debug');
      const demo = await demoIndexes['docs/components/steps/demo/progress-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/progress-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/steps-in-steps')) {
    metaMap['docs/components/steps/demo/steps-in-steps'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/steps-in-steps');
      const demo = await demoIndexes['docs/components/steps/demo/steps-in-steps']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/steps-in-steps'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/vertical-small')) {
    metaMap['docs/components/steps/demo/vertical-small'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/vertical-small');
      const demo = await demoIndexes['docs/components/steps/demo/vertical-small']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/vertical-small'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/filter-in-tree')) {
    metaMap['docs/components/table/demo/filter-in-tree'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/filter-in-tree');
      const demo = await demoIndexes['docs/components/table/demo/filter-in-tree']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/filter-in-tree'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/component-token')) {
    metaMap['docs/components/tabs/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/component-token');
      const demo = await demoIndexes['docs/components/tabs/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/borderlessLayout')) {
    metaMap['docs/components/tag/demo/borderlessLayout'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/borderlessLayout');
      const demo = await demoIndexes['docs/components/tag/demo/borderlessLayout']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/borderlessLayout'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/colorful-inverse')) {
    metaMap['docs/components/tag/demo/colorful-inverse'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/colorful-inverse');
      const demo = await demoIndexes['docs/components/tag/demo/colorful-inverse']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/colorful-inverse'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/bordered')) {
    metaMap['docs/components/time-picker/demo/bordered'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/bordered');
      const demo = await demoIndexes['docs/components/time-picker/demo/bordered']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/bordered'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/disabled')) {
    metaMap['docs/components/time-picker/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/disabled');
      const demo = await demoIndexes['docs/components/time-picker/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/render-panel')) {
    metaMap['docs/components/tooltip/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/render-panel');
      const demo = await demoIndexes['docs/components/tooltip/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/custom-item')) {
    metaMap['docs/components/transfer/demo/custom-item'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/custom-item');
      const demo = await demoIndexes['docs/components/transfer/demo/custom-item']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/custom-item'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/component-token')) {
    metaMap['docs/components/tree/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/component-token');
      const demo = await demoIndexes['docs/components/tree/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/customized-icon')) {
    metaMap['docs/components/tree/demo/customized-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/customized-icon');
      const demo = await demoIndexes['docs/components/tree/demo/customized-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/customized-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/multiple')) {
    metaMap['docs/components/tree-select/demo/multiple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/multiple');
      const demo = await demoIndexes['docs/components/tree-select/demo/multiple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/multiple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/treeData')) {
    metaMap['docs/components/tree-select/demo/treeData'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/treeData');
      const demo = await demoIndexes['docs/components/tree-select/demo/treeData']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/treeData'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/treeLine')) {
    metaMap['docs/components/tree-select/demo/treeLine'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/treeLine');
      const demo = await demoIndexes['docs/components/tree-select/demo/treeLine']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/treeLine'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/picture-style')) {
    metaMap['docs/components/upload/demo/picture-style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/picture-style');
      const demo = await demoIndexes['docs/components/upload/demo/picture-style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/picture-style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/watermark/demo/multi-line')) {
    metaMap['docs/components/watermark/demo/multi-line'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/watermark/demo/multi-line');
      const demo = await demoIndexes['docs/components/watermark/demo/multi-line']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/watermark/demo/multi-line'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/smooth-closed')) {
    metaMap['docs/components/alert/demo/smooth-closed'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/smooth-closed');
      const demo = await demoIndexes['docs/components/alert/demo/smooth-closed']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/smooth-closed'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/targetOffset')) {
    metaMap['docs/components/anchor/demo/targetOffset'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/targetOffset');
      const demo = await demoIndexes['docs/components/anchor/demo/targetOffset']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/targetOffset'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/auto-complete/demo/basic')) {
    metaMap['docs/components/auto-complete/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/auto-complete/demo/basic');
      const demo = await demoIndexes['docs/components/auto-complete/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/auto-complete/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/toggle-debug')) {
    metaMap['docs/components/avatar/demo/toggle-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/toggle-debug');
      const demo = await demoIndexes['docs/components/avatar/demo/toggle-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/toggle-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/demo/withIcon')) {
    metaMap['docs/components/breadcrumb/demo/withIcon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/demo/withIcon');
      const demo = await demoIndexes['docs/components/breadcrumb/demo/withIcon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/demo/withIcon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/legacy-group')) {
    metaMap['docs/components/button/demo/legacy-group'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/legacy-group');
      const demo = await demoIndexes['docs/components/button/demo/legacy-group']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/legacy-group'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/controller')) {
    metaMap['docs/components/checkbox/demo/controller'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/controller');
      const demo = await demoIndexes['docs/components/checkbox/demo/controller']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/controller'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/debug-line')) {
    metaMap['docs/components/checkbox/demo/debug-line'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/debug-line');
      const demo = await demoIndexes['docs/components/checkbox/demo/debug-line']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/debug-line'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/borderless')) {
    metaMap['docs/components/collapse/demo/borderless'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/borderless');
      const demo = await demoIndexes['docs/components/collapse/demo/borderless']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/borderless'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/format')) {
    metaMap['docs/components/color-picker/demo/format'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/format');
      const demo = await demoIndexes['docs/components/color-picker/demo/format']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/format'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/index.en-US')) {
    metaMap['docs/components/color-picker/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/index.en-US');
      const demo = await demoIndexes['docs/components/color-picker/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/index.zh-CN')) {
    metaMap['docs/components/color-picker/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/index.zh-CN');
      const demo = await demoIndexes['docs/components/color-picker/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/border')) {
    metaMap['docs/components/descriptions/demo/border'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/border');
      const demo = await demoIndexes['docs/components/descriptions/demo/border']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/border'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/index.en-US')) {
    metaMap['docs/components/descriptions/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/index.en-US');
      const demo = await demoIndexes['docs/components/descriptions/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/index.zh-CN')) {
    metaMap['docs/components/descriptions/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/index.zh-CN');
      const demo = await demoIndexes['docs/components/descriptions/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/render-panel')) {
    metaMap['docs/components/drawer/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/render-panel');
      const demo = await demoIndexes['docs/components/drawer/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/scroll-debug')) {
    metaMap['docs/components/drawer/demo/scroll-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/scroll-debug');
      const demo = await demoIndexes['docs/components/drawer/demo/scroll-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/scroll-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/user-profile')) {
    metaMap['docs/components/drawer/demo/user-profile'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/user-profile');
      const demo = await demoIndexes['docs/components/drawer/demo/user-profile']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/user-profile'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/icon-debug')) {
    metaMap['docs/components/dropdown/demo/icon-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/icon-debug');
      const demo = await demoIndexes['docs/components/dropdown/demo/icon-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/icon-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/selectable')) {
    metaMap['docs/components/dropdown/demo/selectable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/selectable');
      const demo = await demoIndexes['docs/components/dropdown/demo/selectable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/selectable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/index.en-US')) {
    metaMap['docs/components/float-button/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/index.en-US');
      const demo = await demoIndexes['docs/components/float-button/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/index.zh-CN')) {
    metaMap['docs/components/float-button/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/index.zh-CN');
      const demo = await demoIndexes['docs/components/float-button/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/form-item-path')) {
    metaMap['docs/components/form/demo/form-item-path'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/form-item-path');
      const demo = await demoIndexes['docs/components/form/demo/form-item-path']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/form-item-path'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/validate-other')) {
    metaMap['docs/components/form/demo/validate-other'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/validate-other');
      const demo = await demoIndexes['docs/components/form/demo/validate-other']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/validate-other'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/preview-group')) {
    metaMap['docs/components/image/demo/preview-group'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/preview-group');
      const demo = await demoIndexes['docs/components/image/demo/preview-group']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/preview-group'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/toolbarRender')) {
    metaMap['docs/components/image/demo/toolbarRender'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/toolbarRender');
      const demo = await demoIndexes['docs/components/image/demo/toolbarRender']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/toolbarRender'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/compact-style')) {
    metaMap['docs/components/input/demo/compact-style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/compact-style');
      const demo = await demoIndexes['docs/components/input/demo/compact-style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/compact-style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/prefix')) {
    metaMap['docs/components/input-number/demo/prefix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/prefix');
      const demo = await demoIndexes['docs/components/input-number/demo/prefix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/prefix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/status')) {
    metaMap['docs/components/input-number/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/status');
      const demo = await demoIndexes['docs/components/input-number/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/index.en-US')) {
    metaMap['docs/components/input-number/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/index.en-US');
      const demo = await demoIndexes['docs/components/input-number/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/index.zh-CN')) {
    metaMap['docs/components/input-number/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/index.zh-CN');
      const demo = await demoIndexes['docs/components/input-number/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/footer-render')) {
    metaMap['docs/components/modal/demo/footer-render'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/footer-render');
      const demo = await demoIndexes['docs/components/modal/demo/footer-render']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/footer-render'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/update')) {
    metaMap['docs/components/notification/demo/update'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/update');
      const demo = await demoIndexes['docs/components/notification/demo/update']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/update'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/index.en-US')) {
    metaMap['docs/components/notification/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/index.en-US');
      const demo = await demoIndexes['docs/components/notification/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/index.zh-CN')) {
    metaMap['docs/components/notification/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/index.zh-CN');
      const demo = await demoIndexes['docs/components/notification/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/triggerType')) {
    metaMap['docs/components/popover/demo/triggerType'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/triggerType');
      const demo = await demoIndexes['docs/components/popover/demo/triggerType']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/triggerType'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/customColor')) {
    metaMap['docs/components/qr-code/demo/customColor'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/customColor');
      const demo = await demoIndexes['docs/components/qr-code/demo/customColor']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/customColor'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/icon-only')) {
    metaMap['docs/components/segmented/demo/icon-only'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/icon-only');
      const demo = await demoIndexes['docs/components/segmented/demo/icon-only']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/icon-only'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/with-icon')) {
    metaMap['docs/components/segmented/demo/with-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/with-icon');
      const demo = await demoIndexes['docs/components/segmented/demo/with-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/with-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/render-panel')) {
    metaMap['docs/components/select/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/render-panel');
      const demo = await demoIndexes['docs/components/select/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/select-users')) {
    metaMap['docs/components/select/demo/select-users'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/select-users');
      const demo = await demoIndexes['docs/components/select/demo/select-users']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/select-users'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/input-number')) {
    metaMap['docs/components/slider/demo/input-number'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/input-number');
      const demo = await demoIndexes['docs/components/slider/demo/input-number']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/input-number'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/show-tooltip')) {
    metaMap['docs/components/slider/demo/show-tooltip'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/show-tooltip');
      const demo = await demoIndexes['docs/components/slider/demo/show-tooltip']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/show-tooltip'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/compact-debug')) {
    metaMap['docs/components/space/demo/compact-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/compact-debug');
      const demo = await demoIndexes['docs/components/space/demo/compact-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/compact-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/demo/countdown')) {
    metaMap['docs/components/statistic/demo/countdown'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/demo/countdown');
      const demo = await demoIndexes['docs/components/statistic/demo/countdown']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/demo/countdown'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/filter-search')) {
    metaMap['docs/components/table/demo/filter-search'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/filter-search');
      const demo = await demoIndexes['docs/components/table/demo/filter-search']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/filter-search'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/fixed-columns')) {
    metaMap['docs/components/table/demo/fixed-columns'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/fixed-columns');
      const demo = await demoIndexes['docs/components/table/demo/fixed-columns']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/fixed-columns'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/row-selection')) {
    metaMap['docs/components/table/demo/row-selection'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/row-selection');
      const demo = await demoIndexes['docs/components/table/demo/row-selection']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/row-selection'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/custom-tab-bar')) {
    metaMap['docs/components/tabs/demo/custom-tab-bar'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/custom-tab-bar');
      const demo = await demoIndexes['docs/components/tabs/demo/custom-tab-bar']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/custom-tab-bar'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/component-token')) {
    metaMap['docs/components/tag/demo/component-token'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/component-token');
      const demo = await demoIndexes['docs/components/tag/demo/component-token']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/component-token'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/12hours')) {
    metaMap['docs/components/time-picker/demo/12hours'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/12hours');
      const demo = await demoIndexes['docs/components/time-picker/demo/12hours']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/12hours'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/large-data')) {
    metaMap['docs/components/transfer/demo/large-data'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/large-data');
      const demo = await demoIndexes['docs/components/transfer/demo/large-data']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/large-data'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/virtual-scroll')) {
    metaMap['docs/components/tree/demo/virtual-scroll'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/virtual-scroll');
      const demo = await demoIndexes['docs/components/tree/demo/virtual-scroll']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/virtual-scroll'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/ellipsis')) {
    metaMap['docs/components/typography/demo/ellipsis'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/ellipsis');
      const demo = await demoIndexes['docs/components/typography/demo/ellipsis']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/ellipsis'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/drag-sorting')) {
    metaMap['docs/components/upload/demo/drag-sorting'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/drag-sorting');
      const demo = await demoIndexes['docs/components/upload/demo/drag-sorting']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/drag-sorting'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/picture-card')) {
    metaMap['docs/components/upload/demo/picture-card'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/picture-card');
      const demo = await demoIndexes['docs/components/upload/demo/picture-card']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/picture-card'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/preview-file')) {
    metaMap['docs/components/upload/demo/preview-file'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/preview-file');
      const demo = await demoIndexes['docs/components/upload/demo/preview-file']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/preview-file'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/ribbon-debug')) {
    metaMap['docs/components/badge/demo/ribbon-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/ribbon-debug');
      const demo = await demoIndexes['docs/components/badge/demo/ribbon-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/ribbon-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/demo/overlay')) {
    metaMap['docs/components/breadcrumb/demo/overlay'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/demo/overlay');
      const demo = await demoIndexes['docs/components/breadcrumb/demo/overlay']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/demo/overlay'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/debug-block')) {
    metaMap['docs/components/button/demo/debug-block'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/debug-block');
      const demo = await demoIndexes['docs/components/button/demo/debug-block']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/debug-block'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/placement')) {
    metaMap['docs/components/cascader/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/placement');
      const demo = await demoIndexes['docs/components/cascader/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/check-all')) {
    metaMap['docs/components/checkbox/demo/check-all'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/check-all');
      const demo = await demoIndexes['docs/components/checkbox/demo/check-all']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/check-all'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/accordion')) {
    metaMap['docs/components/collapse/demo/accordion'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/accordion');
      const demo = await demoIndexes['docs/components/collapse/demo/accordion']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/accordion'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/format')) {
    metaMap['docs/components/date-picker/demo/format'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/format');
      const demo = await demoIndexes['docs/components/date-picker/demo/format']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/format'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/status')) {
    metaMap['docs/components/date-picker/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/status');
      const demo = await demoIndexes['docs/components/date-picker/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/suffix')) {
    metaMap['docs/components/date-picker/demo/suffix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/suffix');
      const demo = await demoIndexes['docs/components/date-picker/demo/suffix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/suffix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/index.en-US')) {
    metaMap['docs/components/date-picker/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/index.en-US');
      const demo = await demoIndexes['docs/components/date-picker/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/index.zh-CN')) {
    metaMap['docs/components/date-picker/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/index.zh-CN');
      const demo = await demoIndexes['docs/components/date-picker/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/basic')) {
    metaMap['docs/components/descriptions/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/basic');
      const demo = await demoIndexes['docs/components/descriptions/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/style')) {
    metaMap['docs/components/descriptions/demo/style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/style');
      const demo = await demoIndexes['docs/components/descriptions/demo/style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/demo/horizontal')) {
    metaMap['docs/components/divider/demo/horizontal'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/demo/horizontal');
      const demo = await demoIndexes['docs/components/divider/demo/horizontal']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/demo/horizontal'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/basic-right')) {
    metaMap['docs/components/drawer/demo/basic-right'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/basic-right');
      const demo = await demoIndexes['docs/components/drawer/demo/basic-right']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/basic-right'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/menu-full')) {
    metaMap['docs/components/dropdown/demo/menu-full'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/menu-full');
      const demo = await demoIndexes['docs/components/dropdown/demo/menu-full']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/menu-full'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/placement')) {
    metaMap['docs/components/dropdown/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/placement');
      const demo = await demoIndexes['docs/components/dropdown/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/badge')) {
    metaMap['docs/components/float-button/demo/badge'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/badge');
      const demo = await demoIndexes['docs/components/float-button/demo/badge']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/badge'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/basic')) {
    metaMap['docs/components/float-button/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/basic');
      const demo = await demoIndexes['docs/components/float-button/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/group')) {
    metaMap['docs/components/float-button/demo/group'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/group');
      const demo = await demoIndexes['docs/components/float-button/demo/group']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/group'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/shape')) {
    metaMap['docs/components/float-button/demo/shape'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/shape');
      const demo = await demoIndexes['docs/components/float-button/demo/shape']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/shape'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/control-hooks')) {
    metaMap['docs/components/form/demo/control-hooks'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/control-hooks');
      const demo = await demoIndexes['docs/components/form/demo/control-hooks']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/control-hooks'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/form-in-modal')) {
    metaMap['docs/components/form/demo/form-in-modal'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/form-in-modal');
      const demo = await demoIndexes['docs/components/form/demo/form-in-modal']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/form-in-modal'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/nest-messages')) {
    metaMap['docs/components/form/demo/nest-messages'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/nest-messages');
      const demo = await demoIndexes['docs/components/form/demo/nest-messages']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/nest-messages'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/required-mark')) {
    metaMap['docs/components/form/demo/required-mark'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/required-mark');
      const demo = await demoIndexes['docs/components/form/demo/required-mark']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/required-mark'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/validate-only')) {
    metaMap['docs/components/form/demo/validate-only'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/validate-only');
      const demo = await demoIndexes['docs/components/form/demo/validate-only']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/validate-only'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/useBreakpoint')) {
    metaMap['docs/components/grid/demo/useBreakpoint'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/useBreakpoint');
      const demo = await demoIndexes['docs/components/grid/demo/useBreakpoint']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/useBreakpoint'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/preview-mask')) {
    metaMap['docs/components/image/demo/preview-mask'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/preview-mask');
      const demo = await demoIndexes['docs/components/image/demo/preview-mask']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/preview-mask'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/search-input')) {
    metaMap['docs/components/input/demo/search-input'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/search-input');
      const demo = await demoIndexes['docs/components/input/demo/search-input']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/search-input'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/addon')) {
    metaMap['docs/components/input-number/demo/addon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/addon');
      const demo = await demoIndexes['docs/components/input-number/demo/addon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/addon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/basic')) {
    metaMap['docs/components/input-number/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/basic');
      const demo = await demoIndexes['docs/components/input-number/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/digit')) {
    metaMap['docs/components/input-number/demo/digit'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/digit');
      const demo = await demoIndexes['docs/components/input-number/demo/digit']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/digit'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/fixed-sider')) {
    metaMap['docs/components/layout/demo/fixed-sider'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/fixed-sider');
      const demo = await demoIndexes['docs/components/layout/demo/fixed-sider']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/fixed-sider'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/infinite-load')) {
    metaMap['docs/components/list/demo/infinite-load'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/infinite-load');
      const demo = await demoIndexes['docs/components/list/demo/infinite-load']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/infinite-load'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/placement')) {
    metaMap['docs/components/mentions/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/placement');
      const demo = await demoIndexes['docs/components/mentions/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/sider-current')) {
    metaMap['docs/components/menu/demo/sider-current'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/sider-current');
      const demo = await demoIndexes['docs/components/menu/demo/sider-current']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/sider-current'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/submenu-theme')) {
    metaMap['docs/components/menu/demo/submenu-theme'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/submenu-theme');
      const demo = await demoIndexes['docs/components/menu/demo/submenu-theme']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/submenu-theme'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/button-props')) {
    metaMap['docs/components/modal/demo/button-props'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/button-props');
      const demo = await demoIndexes['docs/components/modal/demo/button-props']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/button-props'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/modal-render')) {
    metaMap['docs/components/modal/demo/modal-render'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/modal-render');
      const demo = await demoIndexes['docs/components/modal/demo/modal-render']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/modal-render'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/render-panel')) {
    metaMap['docs/components/modal/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/render-panel');
      const demo = await demoIndexes['docs/components/modal/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/basic')) {
    metaMap['docs/components/notification/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/basic');
      const demo = await demoIndexes['docs/components/notification/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/hooks')) {
    metaMap['docs/components/notification/demo/hooks'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/hooks');
      const demo = await demoIndexes['docs/components/notification/demo/hooks']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/hooks'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/notification/demo/stack')) {
    metaMap['docs/components/notification/demo/stack'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/notification/demo/stack');
      const demo = await demoIndexes['docs/components/notification/demo/stack']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/notification/demo/stack'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/changer')) {
    metaMap['docs/components/pagination/demo/changer'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/changer');
      const demo = await demoIndexes['docs/components/pagination/demo/changer']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/changer'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/promise')) {
    metaMap['docs/components/popconfirm/demo/promise'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/promise');
      const demo = await demoIndexes['docs/components/popconfirm/demo/promise']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/promise'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/dashboard')) {
    metaMap['docs/components/progress/demo/dashboard'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/dashboard');
      const demo = await demoIndexes['docs/components/progress/demo/dashboard']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/dashboard'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/line-mini')) {
    metaMap['docs/components/progress/demo/line-mini'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/line-mini');
      const demo = await demoIndexes['docs/components/progress/demo/line-mini']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/line-mini'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/customSize')) {
    metaMap['docs/components/qr-code/demo/customSize'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/customSize');
      const demo = await demoIndexes['docs/components/qr-code/demo/customSize']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/customSize'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/errorlevel')) {
    metaMap['docs/components/qr-code/demo/errorlevel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/errorlevel');
      const demo = await demoIndexes['docs/components/qr-code/demo/errorlevel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/errorlevel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/disabled')) {
    metaMap['docs/components/segmented/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/disabled');
      const demo = await demoIndexes['docs/components/segmented/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/search-sort')) {
    metaMap['docs/components/select/demo/search-sort'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/search-sort');
      const demo = await demoIndexes['docs/components/select/demo/search-sort']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/search-sort'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/icon-slider')) {
    metaMap['docs/components/slider/demo/icon-slider'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/icon-slider');
      const demo = await demoIndexes['docs/components/slider/demo/icon-slider']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/icon-slider'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/demo/animated')) {
    metaMap['docs/components/statistic/demo/animated'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/demo/animated');
      const demo = await demoIndexes['docs/components/statistic/demo/animated']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/demo/animated'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/progress-dot')) {
    metaMap['docs/components/steps/demo/progress-dot'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/progress-dot');
      const demo = await demoIndexes['docs/components/steps/demo/progress-dot']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/progress-dot'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/drag-sorting')) {
    metaMap['docs/components/table/demo/drag-sorting'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/drag-sorting');
      const demo = await demoIndexes['docs/components/table/demo/drag-sorting']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/drag-sorting'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/fixed-header')) {
    metaMap['docs/components/table/demo/fixed-header'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/fixed-header');
      const demo = await demoIndexes['docs/components/table/demo/fixed-header']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/fixed-header'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/nested-table')) {
    metaMap['docs/components/table/demo/nested-table'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/nested-table');
      const demo = await demoIndexes['docs/components/table/demo/nested-table']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/nested-table'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/order-column')) {
    metaMap['docs/components/table/demo/order-column'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/order-column');
      const demo = await demoIndexes['docs/components/table/demo/order-column']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/order-column'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/reset-filter')) {
    metaMap['docs/components/table/demo/reset-filter'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/reset-filter');
      const demo = await demoIndexes['docs/components/table/demo/reset-filter']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/reset-filter'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/virtual-list')) {
    metaMap['docs/components/table/demo/virtual-list'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/virtual-list');
      const demo = await demoIndexes['docs/components/table/demo/virtual-list']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/virtual-list'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/editable-card')) {
    metaMap['docs/components/tabs/demo/editable-card'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/editable-card');
      const demo = await demoIndexes['docs/components/tabs/demo/editable-card']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/editable-card'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/status')) {
    metaMap['docs/components/time-picker/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/status');
      const demo = await demoIndexes['docs/components/time-picker/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/suffix')) {
    metaMap['docs/components/time-picker/demo/suffix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/suffix');
      const demo = await demoIndexes['docs/components/time-picker/demo/suffix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/suffix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/index.en-US')) {
    metaMap['docs/components/time-picker/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/index.en-US');
      const demo = await demoIndexes['docs/components/time-picker/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/index.zh-CN')) {
    metaMap['docs/components/time-picker/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/index.zh-CN');
      const demo = await demoIndexes['docs/components/time-picker/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/alternate')) {
    metaMap['docs/components/timeline/demo/alternate'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/alternate');
      const demo = await demoIndexes['docs/components/timeline/demo/alternate']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/alternate'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/wireframe')) {
    metaMap['docs/components/timeline/demo/wireframe'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/wireframe');
      const demo = await demoIndexes['docs/components/timeline/demo/wireframe']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/wireframe'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/multiple-line')) {
    metaMap['docs/components/tree/demo/multiple-line'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/multiple-line');
      const demo = await demoIndexes['docs/components/tree/demo/multiple-line']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/multiple-line'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/switcher-icon')) {
    metaMap['docs/components/tree/demo/switcher-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/switcher-icon');
      const demo = await demoIndexes['docs/components/tree/demo/switcher-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/switcher-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/status')) {
    metaMap['docs/components/tree-select/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/status');
      const demo = await demoIndexes['docs/components/tree-select/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/suffix')) {
    metaMap['docs/components/tree-select/demo/suffix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/suffix');
      const demo = await demoIndexes['docs/components/tree-select/demo/suffix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/suffix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/index.en-US')) {
    metaMap['docs/components/tree-select/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/index.en-US');
      const demo = await demoIndexes['docs/components/tree-select/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/index.zh-CN')) {
    metaMap['docs/components/tree-select/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/index.zh-CN');
      const demo = await demoIndexes['docs/components/tree-select/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/custom-icon')) {
    metaMap['docs/components/alert/demo/custom-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/custom-icon');
      const demo = await demoIndexes['docs/components/alert/demo/custom-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/custom-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/description')) {
    metaMap['docs/components/alert/demo/description'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/description');
      const demo = await demoIndexes['docs/components/alert/demo/description']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/description'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/loop-banner')) {
    metaMap['docs/components/alert/demo/loop-banner'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/loop-banner');
      const demo = await demoIndexes['docs/components/alert/demo/loop-banner']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/loop-banner'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/horizontal')) {
    metaMap['docs/components/anchor/demo/horizontal'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/horizontal');
      const demo = await demoIndexes['docs/components/anchor/demo/horizontal']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/horizontal'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/responsive')) {
    metaMap['docs/components/avatar/demo/responsive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/responsive');
      const demo = await demoIndexes['docs/components/avatar/demo/responsive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/responsive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/index.en-US')) {
    metaMap['docs/components/breadcrumb/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/index.en-US');
      const demo = await demoIndexes['docs/components/breadcrumb/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/index.zh-CN')) {
    metaMap['docs/components/breadcrumb/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/index.zh-CN');
      const demo = await demoIndexes['docs/components/breadcrumb/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/debug-icon')) {
    metaMap['docs/components/button/demo/debug-icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/debug-icon');
      const demo = await demoIndexes['docs/components/button/demo/debug-icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/debug-icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/carousel/demo/autoplay')) {
    metaMap['docs/components/carousel/demo/autoplay'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/carousel/demo/autoplay');
      const demo = await demoIndexes['docs/components/carousel/demo/autoplay']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/carousel/demo/autoplay'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/carousel/demo/position')) {
    metaMap['docs/components/carousel/demo/position'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/carousel/demo/position');
      const demo = await demoIndexes['docs/components/carousel/demo/position']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/carousel/demo/position'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/multiple')) {
    metaMap['docs/components/cascader/demo/multiple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/multiple');
      const demo = await demoIndexes['docs/components/cascader/demo/multiple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/multiple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/disabled')) {
    metaMap['docs/components/checkbox/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/disabled');
      const demo = await demoIndexes['docs/components/checkbox/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/base')) {
    metaMap['docs/components/color-picker/demo/base'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/base');
      const demo = await demoIndexes['docs/components/color-picker/demo/base']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/base'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/color-picker/demo/size')) {
    metaMap['docs/components/color-picker/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/color-picker/demo/size');
      const demo = await demoIndexes['docs/components/color-picker/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/color-picker/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/basic')) {
    metaMap['docs/components/date-picker/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/basic');
      const demo = await demoIndexes['docs/components/date-picker/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/size')) {
    metaMap['docs/components/descriptions/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/size');
      const demo = await demoIndexes['docs/components/descriptions/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/text')) {
    metaMap['docs/components/descriptions/demo/text'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/text');
      const demo = await demoIndexes['docs/components/descriptions/demo/text']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/text'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/demo/with-text')) {
    metaMap['docs/components/divider/demo/with-text'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/demo/with-text');
      const demo = await demoIndexes['docs/components/divider/demo/with-text']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/demo/with-text'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/classNames')) {
    metaMap['docs/components/drawer/demo/classNames'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/classNames');
      const demo = await demoIndexes['docs/components/drawer/demo/classNames']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/classNames'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/sub-menu')) {
    metaMap['docs/components/dropdown/demo/sub-menu'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/sub-menu');
      const demo = await demoIndexes['docs/components/dropdown/demo/sub-menu']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/sub-menu'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/empty/demo/description')) {
    metaMap['docs/components/empty/demo/description'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/empty/demo/description');
      const demo = await demoIndexes['docs/components/empty/demo/description']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/empty/demo/description'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/float-button/demo/type')) {
    metaMap['docs/components/float-button/demo/type'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/float-button/demo/type');
      const demo = await demoIndexes['docs/components/float-button/demo/type']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/float-button/demo/type'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/col-24-debug')) {
    metaMap['docs/components/form/demo/col-24-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/col-24-debug');
      const demo = await demoIndexes['docs/components/form/demo/col-24-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/col-24-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/dependencies')) {
    metaMap['docs/components/form/demo/dependencies'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/dependencies');
      const demo = await demoIndexes['docs/components/form/demo/dependencies']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/dependencies'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/dynamic-rule')) {
    metaMap['docs/components/form/demo/dynamic-rule'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/dynamic-rule');
      const demo = await demoIndexes['docs/components/form/demo/dynamic-rule']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/dynamic-rule'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/form-context')) {
    metaMap['docs/components/form/demo/form-context'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/form-context');
      const demo = await demoIndexes['docs/components/form/demo/form-context']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/form-context'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/global-state')) {
    metaMap['docs/components/form/demo/global-state'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/global-state');
      const demo = await demoIndexes['docs/components/form/demo/global-state']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/global-state'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/inline-login')) {
    metaMap['docs/components/form/demo/inline-login'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/inline-login');
      const demo = await demoIndexes['docs/components/form/demo/inline-login']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/inline-login'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/normal-login')) {
    metaMap['docs/components/form/demo/normal-login'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/normal-login');
      const demo = await demoIndexes['docs/components/form/demo/normal-login']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/normal-login'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/warning-only')) {
    metaMap['docs/components/form/demo/warning-only'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/warning-only');
      const demo = await demoIndexes['docs/components/form/demo/warning-only']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/warning-only'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/flex-stretch')) {
    metaMap['docs/components/grid/demo/flex-stretch'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/flex-stretch');
      const demo = await demoIndexes['docs/components/grid/demo/flex-stretch']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/flex-stretch'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/imageRender')) {
    metaMap['docs/components/image/demo/imageRender'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/imageRender');
      const demo = await demoIndexes['docs/components/image/demo/imageRender']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/imageRender'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/placeholder')) {
    metaMap['docs/components/image/demo/placeholder'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/placeholder');
      const demo = await demoIndexes['docs/components/image/demo/placeholder']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/placeholder'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/debug-addon')) {
    metaMap['docs/components/input/demo/debug-addon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/debug-addon');
      const demo = await demoIndexes['docs/components/input/demo/debug-addon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/debug-addon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input-number/demo/size')) {
    metaMap['docs/components/input-number/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input-number/demo/size');
      const demo = await demoIndexes['docs/components/input-number/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input-number/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/responsive')) {
    metaMap['docs/components/layout/demo/responsive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/responsive');
      const demo = await demoIndexes['docs/components/layout/demo/responsive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/responsive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/top-side-2')) {
    metaMap['docs/components/layout/demo/top-side-2'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/top-side-2');
      const demo = await demoIndexes['docs/components/layout/demo/top-side-2']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/top-side-2'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/virtual-list')) {
    metaMap['docs/components/list/demo/virtual-list'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/virtual-list');
      const demo = await demoIndexes['docs/components/list/demo/virtual-list']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/virtual-list'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/autoSize')) {
    metaMap['docs/components/mentions/demo/autoSize'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/autoSize');
      const demo = await demoIndexes['docs/components/mentions/demo/autoSize']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/autoSize'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/readonly')) {
    metaMap['docs/components/mentions/demo/readonly'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/readonly');
      const demo = await demoIndexes['docs/components/mentions/demo/readonly']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/readonly'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/static-info')) {
    metaMap['docs/components/modal/demo/static-info'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/static-info');
      const demo = await demoIndexes['docs/components/modal/demo/static-info']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/static-info'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/simple')) {
    metaMap['docs/components/pagination/demo/simple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/simple');
      const demo = await demoIndexes['docs/components/pagination/demo/simple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/simple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/index.en-US')) {
    metaMap['docs/components/pagination/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/index.en-US');
      const demo = await demoIndexes['docs/components/pagination/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/index.zh-CN')) {
    metaMap['docs/components/pagination/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/index.zh-CN');
      const demo = await demoIndexes['docs/components/pagination/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/locale')) {
    metaMap['docs/components/popconfirm/demo/locale'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/locale');
      const demo = await demoIndexes['docs/components/popconfirm/demo/locale']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/locale'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/index.en-US')) {
    metaMap['docs/components/popconfirm/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/index.en-US');
      const demo = await demoIndexes['docs/components/popconfirm/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/index.zh-CN')) {
    metaMap['docs/components/popconfirm/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/index.zh-CN');
      const demo = await demoIndexes['docs/components/popconfirm/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/placement')) {
    metaMap['docs/components/popover/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/placement');
      const demo = await demoIndexes['docs/components/popover/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/wireframe')) {
    metaMap['docs/components/popover/demo/wireframe'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/wireframe');
      const demo = await demoIndexes['docs/components/popover/demo/wireframe']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/wireframe'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/radiobutton')) {
    metaMap['docs/components/radio/demo/radiobutton'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/radiobutton');
      const demo = await demoIndexes['docs/components/radio/demo/radiobutton']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/radiobutton'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/customIcon')) {
    metaMap['docs/components/result/demo/customIcon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/customIcon');
      const demo = await demoIndexes['docs/components/result/demo/customIcon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/customIcon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/dynamic')) {
    metaMap['docs/components/segmented/demo/dynamic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/dynamic');
      const demo = await demoIndexes['docs/components/segmented/demo/dynamic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/dynamic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/coordinate')) {
    metaMap['docs/components/select/demo/coordinate'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/coordinate');
      const demo = await demoIndexes['docs/components/select/demo/coordinate']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/coordinate'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/responsive')) {
    metaMap['docs/components/select/demo/responsive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/responsive');
      const demo = await demoIndexes['docs/components/select/demo/responsive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/responsive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/search-box')) {
    metaMap['docs/components/select/demo/search-box'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/search-box');
      const demo = await demoIndexes['docs/components/select/demo/search-box']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/search-box'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/demo/children')) {
    metaMap['docs/components/skeleton/demo/children'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/demo/children');
      const demo = await demoIndexes['docs/components/skeleton/demo/children']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/demo/children'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/gap-in-line')) {
    metaMap['docs/components/space/demo/gap-in-line'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/gap-in-line');
      const demo = await demoIndexes['docs/components/space/demo/gap-in-line']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/gap-in-line'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/addon')) {
    metaMap['docs/components/time-picker/demo/addon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/addon');
      const demo = await demoIndexes['docs/components/time-picker/demo/addon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/addon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/basic')) {
    metaMap['docs/components/time-picker/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/basic');
      const demo = await demoIndexes['docs/components/time-picker/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/value')) {
    metaMap['docs/components/time-picker/demo/value'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/value');
      const demo = await demoIndexes['docs/components/time-picker/demo/value']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/value'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/placement')) {
    metaMap['docs/components/tooltip/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/placement');
      const demo = await demoIndexes['docs/components/tooltip/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/demo/render-panel')) {
    metaMap['docs/components/tour/demo/render-panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/demo/render-panel');
      const demo = await demoIndexes['docs/components/tour/demo/render-panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/demo/render-panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/advanced')) {
    metaMap['docs/components/transfer/demo/advanced'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/advanced');
      const demo = await demoIndexes['docs/components/transfer/demo/advanced']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/advanced'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/async')) {
    metaMap['docs/components/tree-select/demo/async'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/async');
      const demo = await demoIndexes['docs/components/tree-select/demo/async']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/async'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree-select/demo/basic')) {
    metaMap['docs/components/tree-select/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree-select/demo/basic');
      const demo = await demoIndexes['docs/components/tree-select/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree-select/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/suffix')) {
    metaMap['docs/components/typography/demo/suffix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/suffix');
      const demo = await demoIndexes['docs/components/typography/demo/suffix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/suffix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/index.en-US')) {
    metaMap['docs/components/typography/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/index.en-US');
      const demo = await demoIndexes['docs/components/typography/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/index.zh-CN')) {
    metaMap['docs/components/typography/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/index.zh-CN');
      const demo = await demoIndexes['docs/components/typography/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/crop-image')) {
    metaMap['docs/components/upload/demo/crop-image'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/crop-image');
      const demo = await demoIndexes['docs/components/upload/demo/crop-image']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/crop-image'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/no-wrapper')) {
    metaMap['docs/components/badge/demo/no-wrapper'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/no-wrapper');
      const demo = await demoIndexes['docs/components/badge/demo/no-wrapper']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/no-wrapper'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/breadcrumb/demo/basic')) {
    metaMap['docs/components/breadcrumb/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/breadcrumb/demo/basic');
      const demo = await demoIndexes['docs/components/breadcrumb/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/breadcrumb/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/border-less')) {
    metaMap['docs/components/card/demo/border-less'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/border-less');
      const demo = await demoIndexes['docs/components/card/demo/border-less']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/border-less'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/noarrow')) {
    metaMap['docs/components/collapse/demo/noarrow'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/noarrow');
      const demo = await demoIndexes['docs/components/collapse/demo/noarrow']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/noarrow'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/mode')) {
    metaMap['docs/components/date-picker/demo/mode'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/mode');
      const demo = await demoIndexes['docs/components/date-picker/demo/mode']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/mode'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/size')) {
    metaMap['docs/components/date-picker/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/size');
      const demo = await demoIndexes['docs/components/date-picker/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/demo/time')) {
    metaMap['docs/components/date-picker/demo/time'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/demo/time');
      const demo = await demoIndexes['docs/components/date-picker/demo/time']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/demo/time'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/descriptions/demo/jsx')) {
    metaMap['docs/components/descriptions/demo/jsx'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/descriptions/demo/jsx');
      const demo = await demoIndexes['docs/components/descriptions/demo/jsx']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/descriptions/demo/jsx'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/demo/vertical')) {
    metaMap['docs/components/divider/demo/vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/demo/vertical');
      const demo = await demoIndexes['docs/components/divider/demo/vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/demo/vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/placement')) {
    metaMap['docs/components/drawer/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/placement');
      const demo = await demoIndexes['docs/components/drawer/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/loading')) {
    metaMap['docs/components/dropdown/demo/loading'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/loading');
      const demo = await demoIndexes['docs/components/dropdown/demo/loading']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/loading'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/trigger')) {
    metaMap['docs/components/dropdown/demo/trigger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/trigger');
      const demo = await demoIndexes['docs/components/dropdown/demo/trigger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/trigger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/demo/combination')) {
    metaMap['docs/components/flex/demo/combination'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/demo/combination');
      const demo = await demoIndexes['docs/components/flex/demo/combination']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/demo/combination'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/control-ref')) {
    metaMap['docs/components/form/demo/control-ref'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/control-ref');
      const demo = await demoIndexes['docs/components/form/demo/control-ref']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/control-ref'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/label-debug')) {
    metaMap['docs/components/form/demo/label-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/label-debug');
      const demo = await demoIndexes['docs/components/form/demo/label-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/label-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/previewSrc')) {
    metaMap['docs/components/image/demo/previewSrc'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/previewSrc');
      const demo = await demoIndexes['docs/components/image/demo/previewSrc']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/previewSrc'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/allowClear')) {
    metaMap['docs/components/input/demo/allowClear'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/allowClear');
      const demo = await demoIndexes['docs/components/input/demo/allowClear']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/allowClear'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/borderless')) {
    metaMap['docs/components/input/demo/borderless'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/borderless');
      const demo = await demoIndexes['docs/components/input/demo/borderless']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/borderless'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/show-count')) {
    metaMap['docs/components/input/demo/show-count'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/show-count');
      const demo = await demoIndexes['docs/components/input/demo/show-count']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/show-count'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/style-debug')) {
    metaMap['docs/components/menu/demo/style-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/style-debug');
      const demo = await demoIndexes['docs/components/menu/demo/style-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/style-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/switch-mode')) {
    metaMap['docs/components/menu/demo/switch-mode'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/switch-mode');
      const demo = await demoIndexes['docs/components/menu/demo/switch-mode']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/switch-mode'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/duration')) {
    metaMap['docs/components/message/demo/duration'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/duration');
      const demo = await demoIndexes['docs/components/message/demo/duration']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/duration'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/thenable')) {
    metaMap['docs/components/message/demo/thenable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/thenable');
      const demo = await demoIndexes['docs/components/message/demo/thenable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/thenable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/classNames')) {
    metaMap['docs/components/modal/demo/classNames'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/classNames');
      const demo = await demoIndexes['docs/components/modal/demo/classNames']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/classNames'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/basic')) {
    metaMap['docs/components/pagination/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/basic');
      const demo = await demoIndexes['docs/components/pagination/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/total')) {
    metaMap['docs/components/pagination/demo/total'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/total');
      const demo = await demoIndexes['docs/components/pagination/demo/total']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/total'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/async')) {
    metaMap['docs/components/popconfirm/demo/async'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/async');
      const demo = await demoIndexes['docs/components/popconfirm/demo/async']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/async'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/basic')) {
    metaMap['docs/components/popconfirm/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/basic');
      const demo = await demoIndexes['docs/components/popconfirm/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/dynamic')) {
    metaMap['docs/components/progress/demo/dynamic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/dynamic');
      const demo = await demoIndexes['docs/components/progress/demo/dynamic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/dynamic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/linecap')) {
    metaMap['docs/components/progress/demo/linecap'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/linecap');
      const demo = await demoIndexes['docs/components/progress/demo/linecap']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/linecap'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/segment')) {
    metaMap['docs/components/progress/demo/segment'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/segment');
      const demo = await demoIndexes['docs/components/progress/demo/segment']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/segment'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/download')) {
    metaMap['docs/components/qr-code/demo/download'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/download');
      const demo = await demoIndexes['docs/components/qr-code/demo/download']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/download'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/radiogroup')) {
    metaMap['docs/components/radio/demo/radiogroup'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/radiogroup');
      const demo = await demoIndexes['docs/components/radio/demo/radiogroup']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/radiogroup'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/custom')) {
    metaMap['docs/components/segmented/demo/custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/custom');
      const demo = await demoIndexes['docs/components/segmented/demo/custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/index.en-US')) {
    metaMap['docs/components/segmented/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/index.en-US');
      const demo = await demoIndexes['docs/components/segmented/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/index.zh-CN')) {
    metaMap['docs/components/segmented/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/index.zh-CN');
      const demo = await demoIndexes['docs/components/segmented/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/placement')) {
    metaMap['docs/components/select/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/placement');
      const demo = await demoIndexes['docs/components/select/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/demo/complex')) {
    metaMap['docs/components/skeleton/demo/complex'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/demo/complex');
      const demo = await demoIndexes['docs/components/skeleton/demo/complex']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/demo/complex'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/demo/element')) {
    metaMap['docs/components/skeleton/demo/element'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/demo/element');
      const demo = await demoIndexes['docs/components/skeleton/demo/element']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/demo/element'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/index.en-US')) {
    metaMap['docs/components/statistic/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/index.en-US');
      const demo = await demoIndexes['docs/components/statistic/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/index.zh-CN')) {
    metaMap['docs/components/statistic/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/index.zh-CN');
      const demo = await demoIndexes['docs/components/statistic/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/small-size')) {
    metaMap['docs/components/steps/demo/small-size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/small-size');
      const demo = await demoIndexes['docs/components/steps/demo/small-size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/small-size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/pagination')) {
    metaMap['docs/components/table/demo/pagination'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/pagination');
      const demo = await demoIndexes['docs/components/table/demo/pagination']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/pagination'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/responsive')) {
    metaMap['docs/components/table/demo/responsive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/responsive');
      const demo = await demoIndexes['docs/components/table/demo/responsive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/responsive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/time-picker/demo/size')) {
    metaMap['docs/components/time-picker/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/time-picker/demo/size');
      const demo = await demoIndexes['docs/components/time-picker/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/time-picker/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/pending')) {
    metaMap['docs/components/timeline/demo/pending'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/pending');
      const demo = await demoIndexes['docs/components/timeline/demo/pending']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/pending'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/colorful')) {
    metaMap['docs/components/tooltip/demo/colorful'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/colorful');
      const demo = await demoIndexes['docs/components/tooltip/demo/colorful']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/colorful'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/disabled')) {
    metaMap['docs/components/tooltip/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/disabled');
      const demo = await demoIndexes['docs/components/tooltip/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/basic')) {
    metaMap['docs/components/typography/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/basic');
      const demo = await demoIndexes['docs/components/typography/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/title')) {
    metaMap['docs/components/typography/demo/title'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/title');
      const demo = await demoIndexes['docs/components/typography/demo/title']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/title'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/directory')) {
    metaMap['docs/components/upload/demo/directory'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/directory');
      const demo = await demoIndexes['docs/components/upload/demo/directory']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/directory'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/file-type')) {
    metaMap['docs/components/upload/demo/file-type'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/file-type');
      const demo = await demoIndexes['docs/components/upload/demo/file-type']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/file-type'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/max-count')) {
    metaMap['docs/components/upload/demo/max-count'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/max-count');
      const demo = await demoIndexes['docs/components/upload/demo/max-count']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/max-count'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/watermark/demo/custom')) {
    metaMap['docs/components/watermark/demo/custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/watermark/demo/custom');
      const demo = await demoIndexes['docs/components/watermark/demo/custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/watermark/demo/custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/watermark/demo/portal')) {
    metaMap['docs/components/watermark/demo/portal'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/watermark/demo/portal');
      const demo = await demoIndexes['docs/components/watermark/demo/portal']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/watermark/demo/portal'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/watermark/index.en-US')) {
    metaMap['docs/components/watermark/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/watermark/index.en-US');
      const demo = await demoIndexes['docs/components/watermark/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/watermark/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/watermark/index.zh-CN')) {
    metaMap['docs/components/watermark/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/watermark/index.zh-CN');
      const demo = await demoIndexes['docs/components/watermark/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/watermark/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/affix/demo/on-change')) {
    metaMap['docs/components/affix/demo/on-change'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/affix/demo/on-change');
      const demo = await demoIndexes['docs/components/affix/demo/on-change']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/affix/demo/on-change'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/onChange')) {
    metaMap['docs/components/anchor/demo/onChange'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/onChange');
      const demo = await demoIndexes['docs/components/anchor/demo/onChange']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/onChange'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/fallback')) {
    metaMap['docs/components/avatar/demo/fallback'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/fallback');
      const demo = await demoIndexes['docs/components/avatar/demo/fallback']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/fallback'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/back-top/demo/custom')) {
    metaMap['docs/components/back-top/demo/custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/back-top/demo/custom');
      const demo = await demoIndexes['docs/components/back-top/demo/custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/back-top/demo/custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/disabled')) {
    metaMap['docs/components/button/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/disabled');
      const demo = await demoIndexes['docs/components/button/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/multiple')) {
    metaMap['docs/components/button/demo/multiple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/multiple');
      const demo = await demoIndexes['docs/components/button/demo/multiple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/multiple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/demo/select')) {
    metaMap['docs/components/calendar/demo/select'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/demo/select');
      const demo = await demoIndexes['docs/components/calendar/demo/select']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/demo/select'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/index.en-US')) {
    metaMap['docs/components/calendar/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/index.en-US');
      const demo = await demoIndexes['docs/components/calendar/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/index.zh-CN')) {
    metaMap['docs/components/calendar/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/index.zh-CN');
      const demo = await demoIndexes['docs/components/calendar/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/carousel/index.en-US')) {
    metaMap['docs/components/carousel/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/carousel/index.en-US');
      const demo = await demoIndexes['docs/components/carousel/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/carousel/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/carousel/index.zh-CN')) {
    metaMap['docs/components/carousel/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/carousel/index.zh-CN');
      const demo = await demoIndexes['docs/components/carousel/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/carousel/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/search')) {
    metaMap['docs/components/cascader/demo/search'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/search');
      const demo = await demoIndexes['docs/components/cascader/demo/search']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/search'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/status')) {
    metaMap['docs/components/cascader/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/status');
      const demo = await demoIndexes['docs/components/cascader/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/suffix')) {
    metaMap['docs/components/cascader/demo/suffix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/suffix');
      const demo = await demoIndexes['docs/components/cascader/demo/suffix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/suffix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/index.en-US')) {
    metaMap['docs/components/cascader/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/index.en-US');
      const demo = await demoIndexes['docs/components/cascader/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/index.zh-CN')) {
    metaMap['docs/components/cascader/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/index.zh-CN');
      const demo = await demoIndexes['docs/components/cascader/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/layout')) {
    metaMap['docs/components/checkbox/demo/layout'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/layout');
      const demo = await demoIndexes['docs/components/checkbox/demo/layout']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/layout'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/index.en-US')) {
    metaMap['docs/components/checkbox/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/index.en-US');
      const demo = await demoIndexes['docs/components/checkbox/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/index.zh-CN')) {
    metaMap['docs/components/checkbox/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/index.zh-CN');
      const demo = await demoIndexes['docs/components/checkbox/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/custom')) {
    metaMap['docs/components/collapse/demo/custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/custom');
      const demo = await demoIndexes['docs/components/collapse/demo/custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/index.en-US')) {
    metaMap['docs/components/collapse/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/index.en-US');
      const demo = await demoIndexes['docs/components/collapse/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/index.zh-CN')) {
    metaMap['docs/components/collapse/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/index.zh-CN');
      const demo = await demoIndexes['docs/components/collapse/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/index.en-US')) {
    metaMap['docs/components/dropdown/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/index.en-US');
      const demo = await demoIndexes['docs/components/dropdown/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/index.zh-CN')) {
    metaMap['docs/components/dropdown/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/index.zh-CN');
      const demo = await demoIndexes['docs/components/dropdown/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/empty/demo/customize')) {
    metaMap['docs/components/empty/demo/customize'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/empty/demo/customize');
      const demo = await demoIndexes['docs/components/empty/demo/customize']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/empty/demo/customize'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/flex-align')) {
    metaMap['docs/components/grid/demo/flex-align'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/flex-align');
      const demo = await demoIndexes['docs/components/grid/demo/flex-align']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/flex-align'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/flex-order')) {
    metaMap['docs/components/grid/demo/flex-order'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/flex-order');
      const demo = await demoIndexes['docs/components/grid/demo/flex-order']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/flex-order'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/playground')) {
    metaMap['docs/components/grid/demo/playground'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/playground');
      const demo = await demoIndexes['docs/components/grid/demo/playground']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/playground'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/responsive')) {
    metaMap['docs/components/grid/demo/responsive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/responsive');
      const demo = await demoIndexes['docs/components/grid/demo/responsive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/responsive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/presuffix')) {
    metaMap['docs/components/input/demo/presuffix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/presuffix');
      const demo = await demoIndexes['docs/components/input/demo/presuffix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/presuffix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/top-side')) {
    metaMap['docs/components/layout/demo/top-side'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/top-side');
      const demo = await demoIndexes['docs/components/layout/demo/top-side']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/top-side'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/pagination')) {
    metaMap['docs/components/list/demo/pagination'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/pagination');
      const demo = await demoIndexes['docs/components/list/demo/pagination']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/pagination'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/responsive')) {
    metaMap['docs/components/list/demo/responsive'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/responsive');
      const demo = await demoIndexes['docs/components/list/demo/responsive']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/responsive'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/prefix')) {
    metaMap['docs/components/mentions/demo/prefix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/prefix');
      const demo = await demoIndexes['docs/components/mentions/demo/prefix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/prefix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/status')) {
    metaMap['docs/components/mentions/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/status');
      const demo = await demoIndexes['docs/components/mentions/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/index.en-US')) {
    metaMap['docs/components/mentions/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/index.en-US');
      const demo = await demoIndexes['docs/components/mentions/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/index.zh-CN')) {
    metaMap['docs/components/mentions/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/index.zh-CN');
      const demo = await demoIndexes['docs/components/mentions/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/horizontal')) {
    metaMap['docs/components/menu/demo/horizontal'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/horizontal');
      const demo = await demoIndexes['docs/components/menu/demo/horizontal']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/horizontal'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/loading')) {
    metaMap['docs/components/message/demo/loading'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/loading');
      const demo = await demoIndexes['docs/components/message/demo/loading']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/loading'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/wireframe')) {
    metaMap['docs/components/modal/demo/wireframe'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/wireframe');
      const demo = await demoIndexes['docs/components/modal/demo/wireframe']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/wireframe'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/overview/index.en-US')) {
    metaMap['docs/components/overview/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/overview/index.en-US');
      const demo = await demoIndexes['docs/components/overview/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/overview/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/overview/index.zh-CN')) {
    metaMap['docs/components/overview/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/overview/index.zh-CN');
      const demo = await demoIndexes['docs/components/overview/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/overview/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/jump')) {
    metaMap['docs/components/pagination/demo/jump'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/jump');
      const demo = await demoIndexes['docs/components/pagination/demo/jump']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/jump'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/mini')) {
    metaMap['docs/components/pagination/demo/mini'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/mini');
      const demo = await demoIndexes['docs/components/pagination/demo/mini']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/mini'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/more')) {
    metaMap['docs/components/pagination/demo/more'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/more');
      const demo = await demoIndexes['docs/components/pagination/demo/more']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/more'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popconfirm/demo/icon')) {
    metaMap['docs/components/popconfirm/demo/icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popconfirm/demo/icon');
      const demo = await demoIndexes['docs/components/popconfirm/demo/icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popconfirm/demo/icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/control')) {
    metaMap['docs/components/popover/demo/control'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/control');
      const demo = await demoIndexes['docs/components/popover/demo/control']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/control'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/circle')) {
    metaMap['docs/components/progress/demo/circle'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/circle');
      const demo = await demoIndexes['docs/components/progress/demo/circle']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/circle'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/format')) {
    metaMap['docs/components/progress/demo/format'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/format');
      const demo = await demoIndexes['docs/components/progress/demo/format']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/format'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/index.en-US')) {
    metaMap['docs/components/progress/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/index.en-US');
      const demo = await demoIndexes['docs/components/progress/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/index.zh-CN')) {
    metaMap['docs/components/progress/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/index.zh-CN');
      const demo = await demoIndexes['docs/components/progress/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/Popover')) {
    metaMap['docs/components/qr-code/demo/Popover'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/Popover');
      const demo = await demoIndexes['docs/components/qr-code/demo/Popover']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/Popover'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/wireframe')) {
    metaMap['docs/components/radio/demo/wireframe'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/wireframe');
      const demo = await demoIndexes['docs/components/radio/demo/wireframe']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/wireframe'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/basic')) {
    metaMap['docs/components/segmented/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/basic');
      const demo = await demoIndexes['docs/components/segmented/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/block')) {
    metaMap['docs/components/segmented/demo/block'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/block');
      const demo = await demoIndexes['docs/components/segmented/demo/block']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/block'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/big-data')) {
    metaMap['docs/components/select/demo/big-data'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/big-data');
      const demo = await demoIndexes['docs/components/select/demo/big-data']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/big-data'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/bordered')) {
    metaMap['docs/components/select/demo/bordered'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/bordered');
      const demo = await demoIndexes['docs/components/select/demo/bordered']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/bordered'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/multiple')) {
    metaMap['docs/components/select/demo/multiple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/multiple');
      const demo = await demoIndexes['docs/components/select/demo/multiple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/multiple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/optgroup')) {
    metaMap['docs/components/select/demo/optgroup'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/optgroup');
      const demo = await demoIndexes['docs/components/select/demo/optgroup']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/optgroup'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/demo/active')) {
    metaMap['docs/components/skeleton/demo/active'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/demo/active');
      const demo = await demoIndexes['docs/components/skeleton/demo/active']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/demo/active'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/index.en-US')) {
    metaMap['docs/components/skeleton/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/index.en-US');
      const demo = await demoIndexes['docs/components/skeleton/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/index.zh-CN')) {
    metaMap['docs/components/skeleton/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/index.zh-CN');
      const demo = await demoIndexes['docs/components/skeleton/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/multiple')) {
    metaMap['docs/components/slider/demo/multiple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/multiple');
      const demo = await demoIndexes['docs/components/slider/demo/multiple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/multiple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/vertical')) {
    metaMap['docs/components/slider/demo/vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/vertical');
      const demo = await demoIndexes['docs/components/slider/demo/vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/demo/basic')) {
    metaMap['docs/components/statistic/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/demo/basic');
      const demo = await demoIndexes['docs/components/statistic/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/clickable')) {
    metaMap['docs/components/steps/demo/clickable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/clickable');
      const demo = await demoIndexes['docs/components/steps/demo/clickable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/clickable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/step-next')) {
    metaMap['docs/components/steps/demo/step-next'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/step-next');
      const demo = await demoIndexes['docs/components/steps/demo/step-next']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/step-next'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/wireframe')) {
    metaMap['docs/components/steps/demo/wireframe'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/wireframe');
      const demo = await demoIndexes['docs/components/steps/demo/wireframe']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/wireframe'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/demo/disabled')) {
    metaMap['docs/components/switch/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/demo/disabled');
      const demo = await demoIndexes['docs/components/switch/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/edit-cell')) {
    metaMap['docs/components/table/demo/edit-cell'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/edit-cell');
      const demo = await demoIndexes['docs/components/table/demo/edit-cell']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/edit-cell'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/tree-data')) {
    metaMap['docs/components/table/demo/tree-data'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/tree-data');
      const demo = await demoIndexes['docs/components/table/demo/tree-data']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/tree-data'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/custom')) {
    metaMap['docs/components/timeline/demo/custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/custom');
      const demo = await demoIndexes['docs/components/timeline/demo/custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/index.en-US')) {
    metaMap['docs/components/timeline/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/index.en-US');
      const demo = await demoIndexes['docs/components/timeline/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/index.zh-CN')) {
    metaMap['docs/components/timeline/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/index.zh-CN');
      const demo = await demoIndexes['docs/components/timeline/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/oneWay')) {
    metaMap['docs/components/transfer/demo/oneWay'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/oneWay');
      const demo = await demoIndexes['docs/components/transfer/demo/oneWay']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/oneWay'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/search')) {
    metaMap['docs/components/transfer/demo/search'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/search');
      const demo = await demoIndexes['docs/components/transfer/demo/search']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/search'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/status')) {
    metaMap['docs/components/transfer/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/status');
      const demo = await demoIndexes['docs/components/transfer/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/index.en-US')) {
    metaMap['docs/components/transfer/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/index.en-US');
      const demo = await demoIndexes['docs/components/transfer/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/index.zh-CN')) {
    metaMap['docs/components/transfer/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/index.zh-CN');
      const demo = await demoIndexes['docs/components/transfer/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/drag-debug')) {
    metaMap['docs/components/tree/demo/drag-debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/drag-debug');
      const demo = await demoIndexes['docs/components/tree/demo/drag-debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/drag-debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/typography/demo/text')) {
    metaMap['docs/components/typography/demo/text'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/typography/demo/text');
      const demo = await demoIndexes['docs/components/typography/demo/text']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/typography/demo/text'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/fileList')) {
    metaMap['docs/components/upload/demo/fileList'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/fileList');
      const demo = await demoIndexes['docs/components/upload/demo/fileList']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/fileList'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/watermark/demo/basic')) {
    metaMap['docs/components/watermark/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/watermark/demo/basic');
      const demo = await demoIndexes['docs/components/watermark/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/watermark/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/watermark/demo/image')) {
    metaMap['docs/components/watermark/demo/image'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/watermark/demo/image');
      const demo = await demoIndexes['docs/components/watermark/demo/image']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/watermark/demo/image'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/closable')) {
    metaMap['docs/components/alert/demo/closable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/closable');
      const demo = await demoIndexes['docs/components/alert/demo/closable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/closable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/onClick')) {
    metaMap['docs/components/anchor/demo/onClick'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/onClick');
      const demo = await demoIndexes['docs/components/anchor/demo/onClick']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/onClick'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/replace')) {
    metaMap['docs/components/anchor/demo/replace'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/replace');
      const demo = await demoIndexes['docs/components/anchor/demo/replace']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/replace'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/dynamic')) {
    metaMap['docs/components/avatar/demo/dynamic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/dynamic');
      const demo = await demoIndexes['docs/components/avatar/demo/dynamic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/dynamic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/back-top/demo/basic')) {
    metaMap['docs/components/back-top/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/back-top/demo/basic');
      const demo = await demoIndexes['docs/components/back-top/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/back-top/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/colorful')) {
    metaMap['docs/components/badge/demo/colorful'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/colorful');
      const demo = await demoIndexes['docs/components/badge/demo/colorful']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/colorful'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/overflow')) {
    metaMap['docs/components/badge/demo/overflow'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/overflow');
      const demo = await demoIndexes['docs/components/badge/demo/overflow']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/overflow'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/loading')) {
    metaMap['docs/components/button/demo/loading'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/loading');
      const demo = await demoIndexes['docs/components/button/demo/loading']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/loading'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/demo/basic')) {
    metaMap['docs/components/calendar/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/demo/basic');
      const demo = await demoIndexes['docs/components/calendar/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/demo/lunar')) {
    metaMap['docs/components/calendar/demo/lunar'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/demo/lunar');
      const demo = await demoIndexes['docs/components/calendar/demo/lunar']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/demo/lunar'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/grid-card')) {
    metaMap['docs/components/card/demo/grid-card'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/grid-card');
      const demo = await demoIndexes['docs/components/card/demo/grid-card']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/grid-card'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/in-column')) {
    metaMap['docs/components/card/demo/in-column'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/in-column');
      const demo = await demoIndexes['docs/components/card/demo/in-column']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/in-column'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/carousel/demo/basic')) {
    metaMap['docs/components/carousel/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/carousel/demo/basic');
      const demo = await demoIndexes['docs/components/carousel/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/carousel/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/basic')) {
    metaMap['docs/components/cascader/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/basic');
      const demo = await demoIndexes['docs/components/cascader/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/hover')) {
    metaMap['docs/components/cascader/demo/hover'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/hover');
      const demo = await demoIndexes['docs/components/cascader/demo/hover']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/hover'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/panel')) {
    metaMap['docs/components/cascader/demo/panel'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/panel');
      const demo = await demoIndexes['docs/components/cascader/demo/panel']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/panel'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/basic')) {
    metaMap['docs/components/checkbox/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/basic');
      const demo = await demoIndexes['docs/components/checkbox/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/checkbox/demo/group')) {
    metaMap['docs/components/checkbox/demo/group'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/checkbox/demo/group');
      const demo = await demoIndexes['docs/components/checkbox/demo/group']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/checkbox/demo/group'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/basic')) {
    metaMap['docs/components/collapse/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/basic');
      const demo = await demoIndexes['docs/components/collapse/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/extra')) {
    metaMap['docs/components/collapse/demo/extra'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/extra');
      const demo = await demoIndexes['docs/components/collapse/demo/extra']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/extra'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/ghost')) {
    metaMap['docs/components/collapse/demo/ghost'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/ghost');
      const demo = await demoIndexes['docs/components/collapse/demo/ghost']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/ghost'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/index.en-US')) {
    metaMap['docs/components/divider/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/index.en-US');
      const demo = await demoIndexes['docs/components/divider/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/index.zh-CN')) {
    metaMap['docs/components/divider/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/index.zh-CN');
      const demo = await demoIndexes['docs/components/divider/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/no-mask')) {
    metaMap['docs/components/drawer/demo/no-mask'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/no-mask');
      const demo = await demoIndexes['docs/components/drawer/demo/no-mask']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/no-mask'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/arrow')) {
    metaMap['docs/components/dropdown/demo/arrow'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/arrow');
      const demo = await demoIndexes['docs/components/dropdown/demo/arrow']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/arrow'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/basic')) {
    metaMap['docs/components/dropdown/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/basic');
      const demo = await demoIndexes['docs/components/dropdown/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/event')) {
    metaMap['docs/components/dropdown/demo/event'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/event');
      const demo = await demoIndexes['docs/components/dropdown/demo/event']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/event'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/icon/demo/scriptUrl')) {
    metaMap['docs/components/icon/demo/scriptUrl'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/icon/demo/scriptUrl');
      const demo = await demoIndexes['docs/components/icon/demo/scriptUrl']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/icon/demo/scriptUrl'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/fallback')) {
    metaMap['docs/components/image/demo/fallback'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/fallback');
      const demo = await demoIndexes['docs/components/image/demo/fallback']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/fallback'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/textarea')) {
    metaMap['docs/components/input/demo/textarea'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/textarea');
      const demo = await demoIndexes['docs/components/input/demo/textarea']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/textarea'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/grid-test')) {
    metaMap['docs/components/list/demo/grid-test'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/grid-test');
      const demo = await demoIndexes['docs/components/list/demo/grid-test']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/grid-test'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/async')) {
    metaMap['docs/components/mentions/demo/async'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/async');
      const demo = await demoIndexes['docs/components/mentions/demo/async']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/async'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/basic')) {
    metaMap['docs/components/mentions/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/basic');
      const demo = await demoIndexes['docs/components/mentions/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/update')) {
    metaMap['docs/components/message/demo/update'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/update');
      const demo = await demoIndexes['docs/components/message/demo/update']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/update'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/index.en-US')) {
    metaMap['docs/components/message/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/index.en-US');
      const demo = await demoIndexes['docs/components/message/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/index.zh-CN')) {
    metaMap['docs/components/message/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/index.zh-CN');
      const demo = await demoIndexes['docs/components/message/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/position')) {
    metaMap['docs/components/modal/demo/position'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/position');
      const demo = await demoIndexes['docs/components/modal/demo/position']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/position'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/pagination/demo/all')) {
    metaMap['docs/components/pagination/demo/all'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/pagination/demo/all');
      const demo = await demoIndexes['docs/components/pagination/demo/all']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/pagination/demo/all'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/index.en-US')) {
    metaMap['docs/components/popover/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/index.en-US');
      const demo = await demoIndexes['docs/components/popover/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/index.zh-CN')) {
    metaMap['docs/components/popover/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/index.zh-CN');
      const demo = await demoIndexes['docs/components/popover/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/steps')) {
    metaMap['docs/components/progress/demo/steps'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/steps');
      const demo = await demoIndexes['docs/components/progress/demo/steps']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/steps'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/status')) {
    metaMap['docs/components/qr-code/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/status');
      const demo = await demoIndexes['docs/components/qr-code/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/index.en-US')) {
    metaMap['docs/components/qr-code/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/index.en-US');
      const demo = await demoIndexes['docs/components/qr-code/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/index.zh-CN')) {
    metaMap['docs/components/qr-code/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/index.zh-CN');
      const demo = await demoIndexes['docs/components/qr-code/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/disabled')) {
    metaMap['docs/components/radio/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/disabled');
      const demo = await demoIndexes['docs/components/radio/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/character')) {
    metaMap['docs/components/rate/demo/character'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/character');
      const demo = await demoIndexes['docs/components/rate/demo/character']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/character'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/success')) {
    metaMap['docs/components/result/demo/success'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/success');
      const demo = await demoIndexes['docs/components/result/demo/success']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/success'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/warning')) {
    metaMap['docs/components/result/demo/warning'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/warning');
      const demo = await demoIndexes['docs/components/result/demo/warning']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/warning'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/segmented/demo/size')) {
    metaMap['docs/components/segmented/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/segmented/demo/size');
      const demo = await demoIndexes['docs/components/segmented/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/segmented/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/demo/basic')) {
    metaMap['docs/components/skeleton/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/demo/basic');
      const demo = await demoIndexes['docs/components/skeleton/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/reverse')) {
    metaMap['docs/components/slider/demo/reverse'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/reverse');
      const demo = await demoIndexes['docs/components/slider/demo/reverse']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/reverse'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/vertical')) {
    metaMap['docs/components/space/demo/vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/vertical');
      const demo = await demoIndexes['docs/components/space/demo/vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/demo/card')) {
    metaMap['docs/components/statistic/demo/card'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/demo/card');
      const demo = await demoIndexes['docs/components/statistic/demo/card']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/demo/card'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/statistic/demo/unit')) {
    metaMap['docs/components/statistic/demo/unit'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/statistic/demo/unit');
      const demo = await demoIndexes['docs/components/statistic/demo/unit']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/statistic/demo/unit'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/progress')) {
    metaMap['docs/components/steps/demo/progress'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/progress');
      const demo = await demoIndexes['docs/components/steps/demo/progress']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/progress'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/vertical')) {
    metaMap['docs/components/steps/demo/vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/vertical');
      const demo = await demoIndexes['docs/components/steps/demo/vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/demo/loading')) {
    metaMap['docs/components/switch/demo/loading'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/demo/loading');
      const demo = await demoIndexes['docs/components/switch/demo/loading']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/demo/loading'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/bordered')) {
    metaMap['docs/components/table/demo/bordered'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/bordered');
      const demo = await demoIndexes['docs/components/table/demo/bordered']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/bordered'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/edit-row')) {
    metaMap['docs/components/table/demo/edit-row'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/edit-row');
      const demo = await demoIndexes['docs/components/table/demo/edit-row']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/edit-row'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/ellipsis')) {
    metaMap['docs/components/table/demo/ellipsis'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/ellipsis');
      const demo = await demoIndexes['docs/components/table/demo/ellipsis']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/ellipsis'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/borderless')) {
    metaMap['docs/components/tag/demo/borderless'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/borderless');
      const demo = await demoIndexes['docs/components/tag/demo/borderless']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/borderless'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/basic')) {
    metaMap['docs/components/timeline/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/basic');
      const demo = await demoIndexes['docs/components/timeline/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/color')) {
    metaMap['docs/components/timeline/demo/color'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/color');
      const demo = await demoIndexes['docs/components/timeline/demo/color']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/color'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/label')) {
    metaMap['docs/components/timeline/demo/label'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/label');
      const demo = await demoIndexes['docs/components/timeline/demo/label']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/label'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/timeline/demo/right')) {
    metaMap['docs/components/timeline/demo/right'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/timeline/demo/right');
      const demo = await demoIndexes['docs/components/timeline/demo/right']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/timeline/demo/right'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/index.en-US')) {
    metaMap['docs/components/tooltip/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/index.en-US');
      const demo = await demoIndexes['docs/components/tooltip/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/index.zh-CN')) {
    metaMap['docs/components/tooltip/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/index.zh-CN');
      const demo = await demoIndexes['docs/components/tooltip/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/demo/indicator')) {
    metaMap['docs/components/tour/demo/indicator'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/demo/indicator');
      const demo = await demoIndexes['docs/components/tour/demo/indicator']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/demo/indicator'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/demo/non-modal')) {
    metaMap['docs/components/tour/demo/non-modal'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/demo/non-modal');
      const demo = await demoIndexes['docs/components/tour/demo/non-modal']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/demo/non-modal'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/demo/placement')) {
    metaMap['docs/components/tour/demo/placement'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/demo/placement');
      const demo = await demoIndexes['docs/components/tour/demo/placement']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/demo/placement'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/transfer/demo/basic')) {
    metaMap['docs/components/transfer/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/transfer/demo/basic');
      const demo = await demoIndexes['docs/components/transfer/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/transfer/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/directory')) {
    metaMap['docs/components/tree/demo/directory'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/directory');
      const demo = await demoIndexes['docs/components/tree/demo/directory']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/directory'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/draggable')) {
    metaMap['docs/components/tree/demo/draggable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/draggable');
      const demo = await demoIndexes['docs/components/tree/demo/draggable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/draggable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/static')) {
    metaMap['docs/components/anchor/demo/static'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/static');
      const demo = await demoIndexes['docs/components/anchor/demo/static']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/static'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/index.en-US')) {
    metaMap['docs/components/anchor/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/index.en-US');
      const demo = await demoIndexes['docs/components/anchor/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/index.zh-CN')) {
    metaMap['docs/components/anchor/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/index.zh-CN');
      const demo = await demoIndexes['docs/components/anchor/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/index.en-US')) {
    metaMap['docs/components/avatar/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/index.en-US');
      const demo = await demoIndexes['docs/components/avatar/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/index.zh-CN')) {
    metaMap['docs/components/avatar/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/index.zh-CN');
      const demo = await demoIndexes['docs/components/avatar/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/danger')) {
    metaMap['docs/components/button/demo/danger'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/danger');
      const demo = await demoIndexes['docs/components/button/demo/danger']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/danger'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/index.en-US')) {
    metaMap['docs/components/button/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/index.en-US');
      const demo = await demoIndexes['docs/components/button/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/index.zh-CN')) {
    metaMap['docs/components/button/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/index.zh-CN');
      const demo = await demoIndexes['docs/components/button/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/calendar/demo/card')) {
    metaMap['docs/components/calendar/demo/card'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/calendar/demo/card');
      const demo = await demoIndexes['docs/components/calendar/demo/card']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/calendar/demo/card'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/carousel/demo/fade')) {
    metaMap['docs/components/carousel/demo/fade'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/carousel/demo/fade');
      const demo = await demoIndexes['docs/components/carousel/demo/fade']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/carousel/demo/fade'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/lazy')) {
    metaMap['docs/components/cascader/demo/lazy'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/lazy');
      const demo = await demoIndexes['docs/components/cascader/demo/lazy']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/lazy'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/cascader/demo/size')) {
    metaMap['docs/components/cascader/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/cascader/demo/size');
      const demo = await demoIndexes['docs/components/cascader/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/cascader/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/size')) {
    metaMap['docs/components/collapse/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/size');
      const demo = await demoIndexes['docs/components/collapse/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/divider/demo/plain')) {
    metaMap['docs/components/divider/demo/plain'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/divider/demo/plain');
      const demo = await demoIndexes['docs/components/divider/demo/plain']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/divider/demo/plain'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/index.en-US')) {
    metaMap['docs/components/drawer/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/index.en-US');
      const demo = await demoIndexes['docs/components/drawer/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/index.zh-CN')) {
    metaMap['docs/components/drawer/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/index.zh-CN');
      const demo = await demoIndexes['docs/components/drawer/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/dropdown/demo/item')) {
    metaMap['docs/components/dropdown/demo/item'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/dropdown/demo/item');
      const demo = await demoIndexes['docs/components/dropdown/demo/item']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/dropdown/demo/item'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/disabled')) {
    metaMap['docs/components/form/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/disabled');
      const demo = await demoIndexes['docs/components/form/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/ref-item')) {
    metaMap['docs/components/form/demo/ref-item'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/ref-item');
      const demo = await demoIndexes['docs/components/form/demo/ref-item']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/ref-item'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/register')) {
    metaMap['docs/components/form/demo/register'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/register');
      const demo = await demoIndexes['docs/components/form/demo/register']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/register'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/useWatch')) {
    metaMap['docs/components/form/demo/useWatch'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/useWatch');
      const demo = await demoIndexes['docs/components/form/demo/useWatch']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/useWatch'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/icon/demo/iconfont')) {
    metaMap['docs/components/icon/demo/iconfont'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/icon/demo/iconfont');
      const demo = await demoIndexes['docs/components/icon/demo/iconfont']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/icon/demo/iconfont'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/icon/demo/two-tone')) {
    metaMap['docs/components/icon/demo/two-tone'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/icon/demo/two-tone');
      const demo = await demoIndexes['docs/components/icon/demo/two-tone']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/icon/demo/two-tone'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/tooltip')) {
    metaMap['docs/components/input/demo/tooltip'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/tooltip');
      const demo = await demoIndexes['docs/components/input/demo/tooltip']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/tooltip'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/index.en-US')) {
    metaMap['docs/components/layout/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/index.en-US');
      const demo = await demoIndexes['docs/components/layout/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/index.zh-CN')) {
    metaMap['docs/components/layout/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/index.zh-CN');
      const demo = await demoIndexes['docs/components/layout/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/loadmore')) {
    metaMap['docs/components/list/demo/loadmore'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/loadmore');
      const demo = await demoIndexes['docs/components/list/demo/loadmore']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/loadmore'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/vertical')) {
    metaMap['docs/components/list/demo/vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/vertical');
      const demo = await demoIndexes['docs/components/list/demo/vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/mentions/demo/form')) {
    metaMap['docs/components/mentions/demo/form'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/mentions/demo/form');
      const demo = await demoIndexes['docs/components/mentions/demo/form']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/mentions/demo/form'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/vertical')) {
    metaMap['docs/components/menu/demo/vertical'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/vertical');
      const demo = await demoIndexes['docs/components/menu/demo/vertical']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/vertical'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/hooks')) {
    metaMap['docs/components/message/demo/hooks'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/hooks');
      const demo = await demoIndexes['docs/components/message/demo/hooks']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/hooks'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/other')) {
    metaMap['docs/components/message/demo/other'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/other');
      const demo = await demoIndexes['docs/components/message/demo/other']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/other'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/confirm')) {
    metaMap['docs/components/modal/demo/confirm'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/confirm');
      const demo = await demoIndexes['docs/components/modal/demo/confirm']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/confirm'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/arrow')) {
    metaMap['docs/components/popover/demo/arrow'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/arrow');
      const demo = await demoIndexes['docs/components/popover/demo/arrow']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/arrow'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/popover/demo/basic')) {
    metaMap['docs/components/popover/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/popover/demo/basic');
      const demo = await demoIndexes['docs/components/popover/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/popover/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/line')) {
    metaMap['docs/components/progress/demo/line'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/line');
      const demo = await demoIndexes['docs/components/progress/demo/line']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/line'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/progress/demo/size')) {
    metaMap['docs/components/progress/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/progress/demo/size');
      const demo = await demoIndexes['docs/components/progress/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/progress/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/disabled')) {
    metaMap['docs/components/rate/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/disabled');
      const demo = await demoIndexes['docs/components/rate/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/index.en-US')) {
    metaMap['docs/components/result/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/index.en-US');
      const demo = await demoIndexes['docs/components/result/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/index.zh-CN')) {
    metaMap['docs/components/result/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/index.zh-CN');
      const demo = await demoIndexes['docs/components/result/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/search')) {
    metaMap['docs/components/select/demo/search'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/search');
      const demo = await demoIndexes['docs/components/select/demo/search']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/search'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/status')) {
    metaMap['docs/components/select/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/status');
      const demo = await demoIndexes['docs/components/select/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/suffix')) {
    metaMap['docs/components/select/demo/suffix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/suffix');
      const demo = await demoIndexes['docs/components/select/demo/suffix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/suffix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/index.en-US')) {
    metaMap['docs/components/select/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/index.en-US');
      const demo = await demoIndexes['docs/components/select/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/index.zh-CN')) {
    metaMap['docs/components/select/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/index.zh-CN');
      const demo = await demoIndexes['docs/components/select/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/skeleton/demo/list')) {
    metaMap['docs/components/skeleton/demo/list'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/skeleton/demo/list');
      const demo = await demoIndexes['docs/components/skeleton/demo/list']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/skeleton/demo/list'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/index.en-US')) {
    metaMap['docs/components/slider/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/index.en-US');
      const demo = await demoIndexes['docs/components/slider/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/index.zh-CN')) {
    metaMap['docs/components/slider/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/index.zh-CN');
      const demo = await demoIndexes['docs/components/slider/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/compact')) {
    metaMap['docs/components/space/demo/compact'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/compact');
      const demo = await demoIndexes['docs/components/space/demo/compact']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/compact'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/index.en-US')) {
    metaMap['docs/components/switch/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/index.en-US');
      const demo = await demoIndexes['docs/components/switch/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/index.zh-CN')) {
    metaMap['docs/components/switch/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/index.zh-CN');
      const demo = await demoIndexes['docs/components/switch/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/summary')) {
    metaMap['docs/components/table/demo/summary'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/summary');
      const demo = await demoIndexes['docs/components/table/demo/summary']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/summary'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/animated')) {
    metaMap['docs/components/tabs/demo/animated'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/animated');
      const demo = await demoIndexes['docs/components/tabs/demo/animated']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/animated'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/card-top')) {
    metaMap['docs/components/tabs/demo/card-top'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/card-top');
      const demo = await demoIndexes['docs/components/tabs/demo/card-top']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/card-top'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/centered')) {
    metaMap['docs/components/tabs/demo/centered'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/centered');
      const demo = await demoIndexes['docs/components/tabs/demo/centered']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/centered'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/disabled')) {
    metaMap['docs/components/tabs/demo/disabled'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/disabled');
      const demo = await demoIndexes['docs/components/tabs/demo/disabled']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/disabled'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/position')) {
    metaMap['docs/components/tabs/demo/position'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/position');
      const demo = await demoIndexes['docs/components/tabs/demo/position']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/position'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/animation')) {
    metaMap['docs/components/tag/demo/animation'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/animation');
      const demo = await demoIndexes['docs/components/tag/demo/animation']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/animation'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/checkable')) {
    metaMap['docs/components/tag/demo/checkable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/checkable');
      const demo = await demoIndexes['docs/components/tag/demo/checkable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/checkable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/customize')) {
    metaMap['docs/components/tag/demo/customize'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/customize');
      const demo = await demoIndexes['docs/components/tag/demo/customize']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/customize'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/draggable')) {
    metaMap['docs/components/tag/demo/draggable'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/draggable');
      const demo = await demoIndexes['docs/components/tag/demo/draggable']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/draggable'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/arrow')) {
    metaMap['docs/components/tooltip/demo/arrow'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/arrow');
      const demo = await demoIndexes['docs/components/tooltip/demo/arrow']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/arrow'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/basic')) {
    metaMap['docs/components/tooltip/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/basic');
      const demo = await demoIndexes['docs/components/tooltip/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/debug')) {
    metaMap['docs/components/tooltip/demo/debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/debug');
      const demo = await demoIndexes['docs/components/tooltip/demo/debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tooltip/demo/shift')) {
    metaMap['docs/components/tooltip/demo/shift'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tooltip/demo/shift');
      const demo = await demoIndexes['docs/components/tooltip/demo/shift']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tooltip/demo/shift'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/big-data')) {
    metaMap['docs/components/tree/demo/big-data'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/big-data');
      const demo = await demoIndexes['docs/components/tree/demo/big-data']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/big-data'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/avatar')) {
    metaMap['docs/components/upload/demo/avatar'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/avatar');
      const demo = await demoIndexes['docs/components/upload/demo/avatar']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/avatar'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/index.en-US')) {
    metaMap['docs/components/upload/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/index.en-US');
      const demo = await demoIndexes['docs/components/upload/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/index.zh-CN')) {
    metaMap['docs/components/upload/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/index.zh-CN');
      const demo = await demoIndexes['docs/components/upload/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/affix/demo/target')) {
    metaMap['docs/components/affix/demo/target'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/affix/demo/target');
      const demo = await demoIndexes['docs/components/affix/demo/target']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/affix/demo/target'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/affix/index.en-US')) {
    metaMap['docs/components/affix/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/affix/index.en-US');
      const demo = await demoIndexes['docs/components/affix/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/affix/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/affix/index.zh-CN')) {
    metaMap['docs/components/affix/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/affix/index.zh-CN');
      const demo = await demoIndexes['docs/components/affix/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/affix/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/action')) {
    metaMap['docs/components/alert/demo/action'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/action');
      const demo = await demoIndexes['docs/components/alert/demo/action']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/action'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/banner')) {
    metaMap['docs/components/alert/demo/banner'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/banner');
      const demo = await demoIndexes['docs/components/alert/demo/banner']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/banner'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/index.en-US')) {
    metaMap['docs/components/alert/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/index.en-US');
      const demo = await demoIndexes['docs/components/alert/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/index.zh-CN')) {
    metaMap['docs/components/alert/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/index.zh-CN');
      const demo = await demoIndexes['docs/components/alert/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/anchor/demo/basic')) {
    metaMap['docs/components/anchor/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/anchor/demo/basic');
      const demo = await demoIndexes['docs/components/anchor/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/anchor/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/badge')) {
    metaMap['docs/components/avatar/demo/badge'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/badge');
      const demo = await demoIndexes['docs/components/avatar/demo/badge']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/badge'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/basic')) {
    metaMap['docs/components/avatar/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/basic');
      const demo = await demoIndexes['docs/components/avatar/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/group')) {
    metaMap['docs/components/avatar/demo/group'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/group');
      const demo = await demoIndexes['docs/components/avatar/demo/group']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/group'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/change')) {
    metaMap['docs/components/badge/demo/change'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/change');
      const demo = await demoIndexes['docs/components/badge/demo/change']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/change'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/offset')) {
    metaMap['docs/components/badge/demo/offset'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/offset');
      const demo = await demoIndexes['docs/components/badge/demo/offset']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/offset'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/ribbon')) {
    metaMap['docs/components/badge/demo/ribbon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/ribbon');
      const demo = await demoIndexes['docs/components/badge/demo/ribbon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/ribbon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/status')) {
    metaMap['docs/components/badge/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/status');
      const demo = await demoIndexes['docs/components/badge/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/index.en-US')) {
    metaMap['docs/components/badge/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/index.en-US');
      const demo = await demoIndexes['docs/components/badge/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/index.zh-CN')) {
    metaMap['docs/components/badge/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/index.zh-CN');
      const demo = await demoIndexes['docs/components/badge/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/basic')) {
    metaMap['docs/components/button/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/basic');
      const demo = await demoIndexes['docs/components/button/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/block')) {
    metaMap['docs/components/button/demo/block'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/block');
      const demo = await demoIndexes['docs/components/button/demo/block']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/block'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/ghost')) {
    metaMap['docs/components/button/demo/ghost'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/ghost');
      const demo = await demoIndexes['docs/components/button/demo/ghost']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/ghost'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/loading')) {
    metaMap['docs/components/card/demo/loading'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/loading');
      const demo = await demoIndexes['docs/components/card/demo/loading']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/loading'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/collapse/demo/mix')) {
    metaMap['docs/components/collapse/demo/mix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/collapse/demo/mix');
      const demo = await demoIndexes['docs/components/collapse/demo/mix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/collapse/demo/mix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/extra')) {
    metaMap['docs/components/drawer/demo/extra'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/extra');
      const demo = await demoIndexes['docs/components/drawer/demo/extra']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/extra'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/empty/demo/simple')) {
    metaMap['docs/components/empty/demo/simple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/empty/demo/simple');
      const demo = await demoIndexes['docs/components/empty/demo/simple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/empty/demo/simple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/empty/index.en-US')) {
    metaMap['docs/components/empty/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/empty/index.en-US');
      const demo = await demoIndexes['docs/components/empty/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/empty/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/empty/index.zh-CN')) {
    metaMap['docs/components/empty/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/empty/index.zh-CN');
      const demo = await demoIndexes['docs/components/empty/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/empty/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/index.en-US')) {
    metaMap['docs/components/image/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/index.en-US');
      const demo = await demoIndexes['docs/components/image/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/index.zh-CN')) {
    metaMap['docs/components/image/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/index.zh-CN');
      const demo = await demoIndexes['docs/components/image/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/status')) {
    metaMap['docs/components/input/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/status');
      const demo = await demoIndexes['docs/components/input/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/index.en-US')) {
    metaMap['docs/components/input/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/index.en-US');
      const demo = await demoIndexes['docs/components/input/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/index.zh-CN')) {
    metaMap['docs/components/input/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/index.zh-CN');
      const demo = await demoIndexes['docs/components/input/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/basic')) {
    metaMap['docs/components/layout/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/basic');
      const demo = await demoIndexes['docs/components/layout/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/fixed')) {
    metaMap['docs/components/layout/demo/fixed'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/fixed');
      const demo = await demoIndexes['docs/components/layout/demo/fixed']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/fixed'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/menu-v4')) {
    metaMap['docs/components/menu/demo/menu-v4'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/menu-v4');
      const demo = await demoIndexes['docs/components/menu/demo/menu-v4']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/menu-v4'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/message/demo/info')) {
    metaMap['docs/components/message/demo/info'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/message/demo/info');
      const demo = await demoIndexes['docs/components/message/demo/info']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/message/demo/info'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/footer')) {
    metaMap['docs/components/modal/demo/footer'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/footer');
      const demo = await demoIndexes['docs/components/modal/demo/footer']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/footer'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/locale')) {
    metaMap['docs/components/modal/demo/locale'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/locale');
      const demo = await demoIndexes['docs/components/modal/demo/locale']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/locale'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/manual')) {
    metaMap['docs/components/modal/demo/manual'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/manual');
      const demo = await demoIndexes['docs/components/modal/demo/manual']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/manual'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/index.en-US')) {
    metaMap['docs/components/modal/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/index.en-US');
      const demo = await demoIndexes['docs/components/modal/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/index.zh-CN')) {
    metaMap['docs/components/modal/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/index.zh-CN');
      const demo = await demoIndexes['docs/components/modal/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/base')) {
    metaMap['docs/components/qr-code/demo/base'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/base');
      const demo = await demoIndexes['docs/components/qr-code/demo/base']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/base'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/icon')) {
    metaMap['docs/components/qr-code/demo/icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/icon');
      const demo = await demoIndexes['docs/components/qr-code/demo/icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/qr-code/demo/type')) {
    metaMap['docs/components/qr-code/demo/type'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/qr-code/demo/type');
      const demo = await demoIndexes['docs/components/qr-code/demo/type']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/qr-code/demo/type'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/index.en-US')) {
    metaMap['docs/components/radio/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/index.en-US');
      const demo = await demoIndexes['docs/components/radio/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/index.zh-CN')) {
    metaMap['docs/components/radio/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/index.zh-CN');
      const demo = await demoIndexes['docs/components/radio/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/error')) {
    metaMap['docs/components/result/demo/error'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/error');
      const demo = await demoIndexes['docs/components/result/demo/error']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/error'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/basic')) {
    metaMap['docs/components/select/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/basic');
      const demo = await demoIndexes['docs/components/select/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/debug')) {
    metaMap['docs/components/select/demo/debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/debug');
      const demo = await demoIndexes['docs/components/select/demo/debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/basic')) {
    metaMap['docs/components/slider/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/basic');
      const demo = await demoIndexes['docs/components/slider/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/event')) {
    metaMap['docs/components/slider/demo/event'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/event');
      const demo = await demoIndexes['docs/components/slider/demo/event']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/event'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/index.en-US')) {
    metaMap['docs/components/space/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/index.en-US');
      const demo = await demoIndexes['docs/components/space/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/index.zh-CN')) {
    metaMap['docs/components/space/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/index.zh-CN');
      const demo = await demoIndexes['docs/components/space/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/inline')) {
    metaMap['docs/components/steps/demo/inline'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/inline');
      const demo = await demoIndexes['docs/components/steps/demo/inline']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/inline'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/simple')) {
    metaMap['docs/components/steps/demo/simple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/simple');
      const demo = await demoIndexes['docs/components/steps/demo/simple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/simple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/index.en-US')) {
    metaMap['docs/components/steps/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/index.en-US');
      const demo = await demoIndexes['docs/components/steps/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/index.zh-CN')) {
    metaMap['docs/components/steps/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/index.zh-CN');
      const demo = await demoIndexes['docs/components/steps/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/demo/basic')) {
    metaMap['docs/components/switch/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/demo/basic');
      const demo = await demoIndexes['docs/components/switch/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/expand')) {
    metaMap['docs/components/table/demo/expand'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/expand');
      const demo = await demoIndexes['docs/components/table/demo/expand']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/expand'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/narrow')) {
    metaMap['docs/components/table/demo/narrow'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/narrow');
      const demo = await demoIndexes['docs/components/table/demo/narrow']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/narrow'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/sticky')) {
    metaMap['docs/components/table/demo/sticky'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/sticky');
      const demo = await demoIndexes['docs/components/table/demo/sticky']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/sticky'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/index.en-US')) {
    metaMap['docs/components/table/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/index.en-US');
      const demo = await demoIndexes['docs/components/table/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/index.zh-CN')) {
    metaMap['docs/components/table/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/index.zh-CN');
      const demo = await demoIndexes['docs/components/table/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/colorful')) {
    metaMap['docs/components/tag/demo/colorful'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/colorful');
      const demo = await demoIndexes['docs/components/tag/demo/colorful']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/colorful'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/dynamic')) {
    metaMap['docs/components/tree/demo/dynamic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/dynamic');
      const demo = await demoIndexes['docs/components/tree/demo/dynamic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/dynamic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/basic')) {
    metaMap['docs/components/upload/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/basic');
      const demo = await demoIndexes['docs/components/upload/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/affix/demo/basic')) {
    metaMap['docs/components/affix/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/affix/demo/basic');
      const demo = await demoIndexes['docs/components/affix/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/affix/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/affix/demo/debug')) {
    metaMap['docs/components/affix/demo/debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/affix/demo/debug');
      const demo = await demoIndexes['docs/components/affix/demo/debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/affix/demo/debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/basic')) {
    metaMap['docs/components/alert/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/basic');
      const demo = await demoIndexes['docs/components/alert/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/style')) {
    metaMap['docs/components/alert/demo/style'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/style');
      const demo = await demoIndexes['docs/components/alert/demo/style']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/style'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/avatar/demo/type')) {
    metaMap['docs/components/avatar/demo/type'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/avatar/demo/type');
      const demo = await demoIndexes['docs/components/avatar/demo/type']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/avatar/demo/type'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/basic')) {
    metaMap['docs/components/badge/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/basic');
      const demo = await demoIndexes['docs/components/badge/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/title')) {
    metaMap['docs/components/badge/demo/title'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/title');
      const demo = await demoIndexes['docs/components/badge/demo/title']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/title'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/icon')) {
    metaMap['docs/components/button/demo/icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/icon');
      const demo = await demoIndexes['docs/components/button/demo/icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/button/demo/size')) {
    metaMap['docs/components/button/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/button/demo/size');
      const demo = await demoIndexes['docs/components/button/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/button/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/simple')) {
    metaMap['docs/components/card/demo/simple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/simple');
      const demo = await demoIndexes['docs/components/card/demo/simple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/simple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/index.en-US')) {
    metaMap['docs/components/card/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/index.en-US');
      const demo = await demoIndexes['docs/components/card/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/index.zh-CN')) {
    metaMap['docs/components/card/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/index.zh-CN');
      const demo = await demoIndexes['docs/components/card/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/drawer/demo/size')) {
    metaMap['docs/components/drawer/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/drawer/demo/size');
      const demo = await demoIndexes['docs/components/drawer/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/drawer/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/empty/demo/basic')) {
    metaMap['docs/components/empty/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/empty/demo/basic');
      const demo = await demoIndexes['docs/components/empty/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/empty/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/index.en-US')) {
    metaMap['docs/components/flex/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/index.en-US');
      const demo = await demoIndexes['docs/components/flex/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/index.zh-CN')) {
    metaMap['docs/components/flex/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/index.zh-CN');
      const demo = await demoIndexes['docs/components/flex/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/layout')) {
    metaMap['docs/components/form/demo/layout'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/layout');
      const demo = await demoIndexes['docs/components/form/demo/layout']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/layout'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/index.en-US')) {
    metaMap['docs/components/form/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/index.en-US');
      const demo = await demoIndexes['docs/components/form/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/index.zh-CN')) {
    metaMap['docs/components/form/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/index.zh-CN');
      const demo = await demoIndexes['docs/components/form/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/gutter')) {
    metaMap['docs/components/grid/demo/gutter'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/gutter');
      const demo = await demoIndexes['docs/components/grid/demo/gutter']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/gutter'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/offset')) {
    metaMap['docs/components/grid/demo/offset'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/offset');
      const demo = await demoIndexes['docs/components/grid/demo/offset']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/offset'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/index.en-US')) {
    metaMap['docs/components/grid/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/index.en-US');
      const demo = await demoIndexes['docs/components/grid/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/index.zh-CN')) {
    metaMap['docs/components/grid/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/index.zh-CN');
      const demo = await demoIndexes['docs/components/grid/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/icon/demo/custom')) {
    metaMap['docs/components/icon/demo/custom'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/icon/demo/custom');
      const demo = await demoIndexes['docs/components/icon/demo/custom']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/icon/demo/custom'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/icon/index.en-US')) {
    metaMap['docs/components/icon/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/icon/index.en-US');
      const demo = await demoIndexes['docs/components/icon/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/icon/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/icon/index.zh-CN')) {
    metaMap['docs/components/icon/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/icon/index.zh-CN');
      const demo = await demoIndexes['docs/components/icon/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/icon/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/image/demo/basic')) {
    metaMap['docs/components/image/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/image/demo/basic');
      const demo = await demoIndexes['docs/components/image/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/image/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/addon')) {
    metaMap['docs/components/input/demo/addon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/addon');
      const demo = await demoIndexes['docs/components/input/demo/addon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/addon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/align')) {
    metaMap['docs/components/input/demo/align'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/align');
      const demo = await demoIndexes['docs/components/input/demo/align']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/align'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/basic')) {
    metaMap['docs/components/input/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/basic');
      const demo = await demoIndexes['docs/components/input/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/focus')) {
    metaMap['docs/components/input/demo/focus'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/focus');
      const demo = await demoIndexes['docs/components/input/demo/focus']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/focus'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/group')) {
    metaMap['docs/components/input/demo/group'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/group');
      const demo = await demoIndexes['docs/components/input/demo/group']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/group'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/side')) {
    metaMap['docs/components/layout/demo/side'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/side');
      const demo = await demoIndexes['docs/components/layout/demo/side']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/side'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/simple')) {
    metaMap['docs/components/list/demo/simple'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/simple');
      const demo = await demoIndexes['docs/components/list/demo/simple']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/simple'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/index.en-US')) {
    metaMap['docs/components/list/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/index.en-US');
      const demo = await demoIndexes['docs/components/list/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/index.zh-CN')) {
    metaMap['docs/components/list/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/index.zh-CN');
      const demo = await demoIndexes['docs/components/list/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/inline')) {
    metaMap['docs/components/menu/demo/inline'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/inline');
      const demo = await demoIndexes['docs/components/menu/demo/inline']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/inline'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/index.en-US')) {
    metaMap['docs/components/menu/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/index.en-US');
      const demo = await demoIndexes['docs/components/menu/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/index.zh-CN')) {
    metaMap['docs/components/menu/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/index.zh-CN');
      const demo = await demoIndexes['docs/components/menu/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/async')) {
    metaMap['docs/components/modal/demo/async'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/async');
      const demo = await demoIndexes['docs/components/modal/demo/async']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/async'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/basic')) {
    metaMap['docs/components/modal/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/basic');
      const demo = await demoIndexes['docs/components/modal/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/hooks')) {
    metaMap['docs/components/modal/demo/hooks'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/hooks');
      const demo = await demoIndexes['docs/components/modal/demo/hooks']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/hooks'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/width')) {
    metaMap['docs/components/modal/demo/width'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/width');
      const demo = await demoIndexes['docs/components/modal/demo/width']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/width'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/badge')) {
    metaMap['docs/components/radio/demo/badge'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/badge');
      const demo = await demoIndexes['docs/components/radio/demo/badge']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/badge'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/basic')) {
    metaMap['docs/components/radio/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/basic');
      const demo = await demoIndexes['docs/components/radio/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/index.en-US')) {
    metaMap['docs/components/rate/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/index.en-US');
      const demo = await demoIndexes['docs/components/rate/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/index.zh-CN')) {
    metaMap['docs/components/rate/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/index.zh-CN');
      const demo = await demoIndexes['docs/components/rate/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/info')) {
    metaMap['docs/components/result/demo/info'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/info');
      const demo = await demoIndexes['docs/components/result/demo/info']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/info'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/size')) {
    metaMap['docs/components/select/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/size');
      const demo = await demoIndexes['docs/components/select/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/select/demo/tags')) {
    metaMap['docs/components/select/demo/tags'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/select/demo/tags');
      const demo = await demoIndexes['docs/components/select/demo/tags']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/select/demo/tags'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/slider/demo/mark')) {
    metaMap['docs/components/slider/demo/mark'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/slider/demo/mark');
      const demo = await demoIndexes['docs/components/slider/demo/mark']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/slider/demo/mark'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/align')) {
    metaMap['docs/components/space/demo/align'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/align');
      const demo = await demoIndexes['docs/components/space/demo/align']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/align'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/debug')) {
    metaMap['docs/components/space/demo/debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/debug');
      const demo = await demoIndexes['docs/components/space/demo/debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/split')) {
    metaMap['docs/components/space/demo/split'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/split');
      const demo = await demoIndexes['docs/components/space/demo/split']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/split'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/demo/inside')) {
    metaMap['docs/components/spin/demo/inside'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/demo/inside');
      const demo = await demoIndexes['docs/components/spin/demo/inside']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/demo/inside'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/demo/nested')) {
    metaMap['docs/components/spin/demo/nested'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/demo/nested');
      const demo = await demoIndexes['docs/components/spin/demo/nested']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/demo/nested'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/index.en-US')) {
    metaMap['docs/components/spin/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/index.en-US');
      const demo = await demoIndexes['docs/components/spin/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/index.zh-CN')) {
    metaMap['docs/components/spin/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/index.zh-CN');
      const demo = await demoIndexes['docs/components/spin/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/error')) {
    metaMap['docs/components/steps/demo/error'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/error');
      const demo = await demoIndexes['docs/components/steps/demo/error']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/error'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/demo/size')) {
    metaMap['docs/components/switch/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/demo/size');
      const demo = await demoIndexes['docs/components/switch/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/switch/demo/text')) {
    metaMap['docs/components/switch/demo/text'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/switch/demo/text');
      const demo = await demoIndexes['docs/components/switch/demo/text']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/switch/demo/text'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/basic')) {
    metaMap['docs/components/table/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/basic');
      const demo = await demoIndexes['docs/components/table/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/index.en-US')) {
    metaMap['docs/components/tabs/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/index.en-US');
      const demo = await demoIndexes['docs/components/tabs/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/index.zh-CN')) {
    metaMap['docs/components/tabs/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/index.zh-CN');
      const demo = await demoIndexes['docs/components/tabs/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/control')) {
    metaMap['docs/components/tag/demo/control'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/control');
      const demo = await demoIndexes['docs/components/tag/demo/control']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/control'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/index.en-US')) {
    metaMap['docs/components/tour/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/index.en-US');
      const demo = await demoIndexes['docs/components/tour/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/index.zh-CN')) {
    metaMap['docs/components/tour/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/index.zh-CN');
      const demo = await demoIndexes['docs/components/tour/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/search')) {
    metaMap['docs/components/tree/demo/search'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/search');
      const demo = await demoIndexes['docs/components/tree/demo/search']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/search'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/index.en-US')) {
    metaMap['docs/components/tree/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/index.en-US');
      const demo = await demoIndexes['docs/components/tree/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/index.zh-CN')) {
    metaMap['docs/components/tree/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/index.zh-CN');
      const demo = await demoIndexes['docs/components/tree/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/upload/demo/drag')) {
    metaMap['docs/components/upload/demo/drag'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/upload/demo/drag');
      const demo = await demoIndexes['docs/components/upload/demo/drag']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/upload/demo/drag'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/alert/demo/icon')) {
    metaMap['docs/components/alert/demo/icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/alert/demo/icon');
      const demo = await demoIndexes['docs/components/alert/demo/icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/alert/demo/icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/app/demo/config')) {
    metaMap['docs/components/app/demo/config'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/app/demo/config');
      const demo = await demoIndexes['docs/components/app/demo/config']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/app/demo/config'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/app/index.en-US')) {
    metaMap['docs/components/app/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/app/index.en-US');
      const demo = await demoIndexes['docs/components/app/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/app/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/app/index.zh-CN')) {
    metaMap['docs/components/app/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/app/index.zh-CN');
      const demo = await demoIndexes['docs/components/app/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/app/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/link')) {
    metaMap['docs/components/badge/demo/link'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/link');
      const demo = await demoIndexes['docs/components/badge/demo/link']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/link'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/size')) {
    metaMap['docs/components/badge/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/size');
      const demo = await demoIndexes['docs/components/badge/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/basic')) {
    metaMap['docs/components/card/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/basic');
      const demo = await demoIndexes['docs/components/card/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/inner')) {
    metaMap['docs/components/card/demo/inner'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/inner');
      const demo = await demoIndexes['docs/components/card/demo/inner']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/inner'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/demo/align')) {
    metaMap['docs/components/flex/demo/align'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/demo/align');
      const demo = await demoIndexes['docs/components/flex/demo/align']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/demo/align'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/demo/basic')) {
    metaMap['docs/components/flex/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/demo/basic');
      const demo = await demoIndexes['docs/components/flex/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/demo/debug')) {
    metaMap['docs/components/flex/demo/debug'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/demo/debug');
      const demo = await demoIndexes['docs/components/flex/demo/debug']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/demo/debug'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/basic')) {
    metaMap['docs/components/form/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/basic');
      const demo = await demoIndexes['docs/components/form/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/basic')) {
    metaMap['docs/components/grid/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/basic');
      const demo = await demoIndexes['docs/components/grid/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/icon/demo/basic')) {
    metaMap['docs/components/icon/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/icon/demo/basic');
      const demo = await demoIndexes['docs/components/icon/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/icon/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/input/demo/size')) {
    metaMap['docs/components/input/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/input/demo/size');
      const demo = await demoIndexes['docs/components/input/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/input/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/layout/demo/top')) {
    metaMap['docs/components/layout/demo/top'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/layout/demo/top');
      const demo = await demoIndexes['docs/components/layout/demo/top']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/layout/demo/top'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/basic')) {
    metaMap['docs/components/list/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/basic');
      const demo = await demoIndexes['docs/components/list/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/menu/demo/theme')) {
    metaMap['docs/components/menu/demo/theme'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/menu/demo/theme');
      const demo = await demoIndexes['docs/components/menu/demo/theme']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/menu/demo/theme'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/modal/demo/dark')) {
    metaMap['docs/components/modal/demo/dark'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/modal/demo/dark');
      const demo = await demoIndexes['docs/components/modal/demo/dark']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/modal/demo/dark'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/radio/demo/size')) {
    metaMap['docs/components/radio/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/radio/demo/size');
      const demo = await demoIndexes['docs/components/radio/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/radio/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/basic')) {
    metaMap['docs/components/rate/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/basic');
      const demo = await demoIndexes['docs/components/rate/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/clear')) {
    metaMap['docs/components/rate/demo/clear'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/clear');
      const demo = await demoIndexes['docs/components/rate/demo/clear']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/clear'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/403')) {
    metaMap['docs/components/result/demo/403'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/403');
      const demo = await demoIndexes['docs/components/result/demo/403']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/403'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/404')) {
    metaMap['docs/components/result/demo/404'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/404');
      const demo = await demoIndexes['docs/components/result/demo/404']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/404'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/result/demo/500')) {
    metaMap['docs/components/result/demo/500'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/result/demo/500');
      const demo = await demoIndexes['docs/components/result/demo/500']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/result/demo/500'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/base')) {
    metaMap['docs/components/space/demo/base'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/base');
      const demo = await demoIndexes['docs/components/space/demo/base']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/base'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/size')) {
    metaMap['docs/components/space/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/size');
      const demo = await demoIndexes['docs/components/space/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/space/demo/wrap')) {
    metaMap['docs/components/space/demo/wrap'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/space/demo/wrap');
      const demo = await demoIndexes['docs/components/space/demo/wrap']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/space/demo/wrap'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/demo/basic')) {
    metaMap['docs/components/spin/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/demo/basic');
      const demo = await demoIndexes['docs/components/spin/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/icon')) {
    metaMap['docs/components/steps/demo/icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/icon');
      const demo = await demoIndexes['docs/components/steps/demo/icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/ajax')) {
    metaMap['docs/components/table/demo/ajax'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/ajax');
      const demo = await demoIndexes['docs/components/table/demo/ajax']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/ajax'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/head')) {
    metaMap['docs/components/table/demo/head'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/head');
      const demo = await demoIndexes['docs/components/table/demo/head']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/head'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/size')) {
    metaMap['docs/components/table/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/size');
      const demo = await demoIndexes['docs/components/table/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/basic')) {
    metaMap['docs/components/tabs/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/basic');
      const demo = await demoIndexes['docs/components/tabs/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/extra')) {
    metaMap['docs/components/tabs/demo/extra'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/extra');
      const demo = await demoIndexes['docs/components/tabs/demo/extra']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/extra'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/slide')) {
    metaMap['docs/components/tabs/demo/slide'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/slide');
      const demo = await demoIndexes['docs/components/tabs/demo/slide']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/slide'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/status')) {
    metaMap['docs/components/tag/demo/status'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/status');
      const demo = await demoIndexes['docs/components/tag/demo/status']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/status'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/index.en-US')) {
    metaMap['docs/components/tag/index.en-US'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/index.en-US');
      const demo = await demoIndexes['docs/components/tag/index.en-US']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/index.en-US'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/index.zh-CN')) {
    metaMap['docs/components/tag/index.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/index.zh-CN');
      const demo = await demoIndexes['docs/components/tag/index.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/index.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/demo/basic')) {
    metaMap['docs/components/tour/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/demo/basic');
      const demo = await demoIndexes['docs/components/tour/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/basic')) {
    metaMap['docs/components/tree/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/basic');
      const demo = await demoIndexes['docs/components/tree/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/app/demo/basic')) {
    metaMap['docs/components/app/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/app/demo/basic');
      const demo = await demoIndexes['docs/components/app/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/app/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/dot')) {
    metaMap['docs/components/badge/demo/dot'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/dot');
      const demo = await demoIndexes['docs/components/badge/demo/dot']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/dot'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/badge/demo/mix')) {
    metaMap['docs/components/badge/demo/mix'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/badge/demo/mix');
      const demo = await demoIndexes['docs/components/badge/demo/mix']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/badge/demo/mix'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/meta')) {
    metaMap['docs/components/card/demo/meta'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/meta');
      const demo = await demoIndexes['docs/components/card/demo/meta']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/meta'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/card/demo/tabs')) {
    metaMap['docs/components/card/demo/tabs'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/card/demo/tabs');
      const demo = await demoIndexes['docs/components/card/demo/tabs']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/card/demo/tabs'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/demo/wrap')) {
    metaMap['docs/components/flex/demo/wrap'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/demo/wrap');
      const demo = await demoIndexes['docs/components/flex/demo/wrap']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/demo/wrap'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/form/demo/size')) {
    metaMap['docs/components/form/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/form/demo/size');
      const demo = await demoIndexes['docs/components/form/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/form/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/flex')) {
    metaMap['docs/components/grid/demo/flex'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/flex');
      const demo = await demoIndexes['docs/components/grid/demo/flex']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/flex'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/grid/demo/sort')) {
    metaMap['docs/components/grid/demo/sort'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/grid/demo/sort');
      const demo = await demoIndexes['docs/components/grid/demo/sort']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/grid/demo/sort'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/list/demo/grid')) {
    metaMap['docs/components/list/demo/grid'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/list/demo/grid');
      const demo = await demoIndexes['docs/components/list/demo/grid']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/list/demo/grid'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/half')) {
    metaMap['docs/components/rate/demo/half'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/half');
      const demo = await demoIndexes['docs/components/rate/demo/half']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/half'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/rate/demo/text')) {
    metaMap['docs/components/rate/demo/text'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/rate/demo/text');
      const demo = await demoIndexes['docs/components/rate/demo/text']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/rate/demo/text'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/demo/size')) {
    metaMap['docs/components/spin/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/demo/size');
      const demo = await demoIndexes['docs/components/spin/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/steps/demo/nav')) {
    metaMap['docs/components/steps/demo/nav'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/steps/demo/nav');
      const demo = await demoIndexes['docs/components/steps/demo/nav']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/steps/demo/nav'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/table/demo/jsx')) {
    metaMap['docs/components/table/demo/jsx'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/table/demo/jsx');
      const demo = await demoIndexes['docs/components/table/demo/jsx']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/table/demo/jsx'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/card')) {
    metaMap['docs/components/tabs/demo/card'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/card');
      const demo = await demoIndexes['docs/components/tabs/demo/card']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/card'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/icon')) {
    metaMap['docs/components/tabs/demo/icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/icon');
      const demo = await demoIndexes['docs/components/tabs/demo/icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/nest')) {
    metaMap['docs/components/tabs/demo/nest'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/nest');
      const demo = await demoIndexes['docs/components/tabs/demo/nest']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/nest'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tabs/demo/size')) {
    metaMap['docs/components/tabs/demo/size'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tabs/demo/size');
      const demo = await demoIndexes['docs/components/tabs/demo/size']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tabs/demo/size'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/basic')) {
    metaMap['docs/components/tag/demo/basic'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/basic');
      const demo = await demoIndexes['docs/components/tag/demo/basic']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/basic'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tour/demo/mask')) {
    metaMap['docs/components/tour/demo/mask'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tour/demo/mask');
      const demo = await demoIndexes['docs/components/tour/demo/mask']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tour/demo/mask'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tree/demo/line')) {
    metaMap['docs/components/tree/demo/line'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tree/demo/line');
      const demo = await demoIndexes['docs/components/tree/demo/line']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tree/demo/line'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/flex/demo/gap')) {
    metaMap['docs/components/flex/demo/gap'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/flex/demo/gap');
      const demo = await demoIndexes['docs/components/flex/demo/gap']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/flex/demo/gap'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/spin/demo/tip')) {
    metaMap['docs/components/spin/demo/tip'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/spin/demo/tip');
      const demo = await demoIndexes['docs/components/spin/demo/tip']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/spin/demo/tip'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/tag/demo/icon')) {
    metaMap['docs/components/tag/demo/icon'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/tag/demo/icon');
      const demo = await demoIndexes['docs/components/tag/demo/icon']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/tag/demo/icon'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }
  if (idList.includes('docs/components/date-picker/index.$tab-design.zh-CN')) {
    metaMap['docs/components/date-picker/index.$tab-design.zh-CN'] = async () => {
      const routeMeta = await getRouteMetaById('docs/components/date-picker/index.$tab-design.zh-CN');
      const demo = await demoIndexes['docs/components/date-picker/index.$tab-design.zh-CN']?.getter() || {};
      return {
        frontmatter: filesFrontmatter['docs/components/date-picker/index.$tab-design.zh-CN'] ?? {},
        toc: routeMeta?.toc ?? [],
        texts: routeMeta?.texts ?? [],
        tabs: routeMeta?.tabs ?? [],
        demos: demo?.demos ?? {},
      };
    };
  }

  // Wait for all meta data to be loaded
  const metaList = await Promise.all(Object.entries(metaMap).map(([id, getter]) => getter()));

  // Merge into filesMeta
  const filesMeta = {};

  Object.entries(metaMap).forEach(([id], index) => {
    filesMeta[id] = metaList[index];
  });

  return filesMeta;
}
